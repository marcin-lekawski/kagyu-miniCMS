Połączona zawartość projektu: kagyu_mini_cms
Wygenerowano: 2025-06-18 16:28:18
Liczba przetworzonych plików tekstowych: 54

================================================================================

#####################################
#
# Plik: core/__init__.py
#
#####################################



================================================================================

#####################################
#
# Plik: core/asgi.py
#
#####################################

"""
ASGI config for core project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')

application = get_asgi_application()


================================================================================

#####################################
#
# Plik: core/settings.py
#
#####################################

"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv 
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [   'localhost',
                    '127.0.0.1',
                    'marcin108.pythonanywhere.com',
                ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'pages', # Nasza aplikacja 'pages' do zarządzania stronami
    'news', # Aplikacja 'news' do zarządzania aktualnościami/wydarzeniami w formie bloga
    'tinymce', # Aplikacja TinyMCE do edycji treści
    'site_config', # Aplikacja 'site_config' do zarządzania konfiguracją strony
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'site_config.context_processors.global_website_content', # Tylko ten jeden procesor
            ],
            'libraries': {
                'news_filters': 'news.templatetags.news_filters', # Jawne ładowanie filtrów
            }
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static', # Informuje Django, gdzie szukać dodatkowych plików statycznych
]

# STATIC_ROOT jest używane podczas 'collectstatic' w środowisku produkcyjnym
STATIC_ROOT = BASE_DIR / 'staticfiles' # Gdzie pliki będą zbierane dla serwera WWW

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files (user uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# TinyMCE settings
TINYMCE_DEFAULT_CONFIG = {
    "height": "400px",
    "width": "100%",
    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount",
    "toolbar": "undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help",
    "custom_undo_redo_levels": 10,
    "language": "pl", # Ustaw język edytora na polski
    "extended_valid_elements": "iframe[src|title|width|height|allowfullscreen|frameborder],script[src|type]", # Przykład dla osadzania wideo
}


================================================================================

#####################################
#
# Plik: core/urls.py
#
#####################################

"""
URL configuration for core project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include
from django.views.generic import TemplateView
from news.views import ArticleListView 

# Dodaj importy do obsługi plików statycznych i mediów
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),

    # Dodajemy adres URL dla TinyMCE, aby umożliwić edycję treści stron
    # Wzorzec 'tinymce/' przekierowuje do aplikacji TinyMCE, która obsługuje edycję treści
    # Dzięki temu użytkownicy będą mogli korzystać z edytora TinyMCE do tworzenia i edycji treści stron.
    path('tinymce/', include('tinymce.urls')),


    # Strona główna - teraz będzie wyświetlać listę aktualności
    # Możemy zmienić to na TemplateView jeśli chcemy statyczną stronę główną
    # lub użyć widoku listy aktualności
    
    path('', ArticleListView.as_view(), name='home'), # Strona główna pokazuje aktualności
    # Jeśli chcesz, żeby home.html był statyczny, a lista aktualności pod /aktualnosci/ wtedy zahaszuj powyższą linię i odkomentuj poniższą linię:
    # path('', TemplateView.as_view(template_name='home.html'), name='home'),
    path('aktualnosci/', include('news.urls')), # Dołącz adresy URL z aplikacji news pod /aktualnosci/

    # Dołącz adresy URL z naszej aplikacji 'pages'
    # Każdy adres URL nie pasujący do 'admin/' ani '/' zostanie przekazany do 'pages.urls'
    path('', include('pages.urls')),
]

 # * `path('', TemplateView.as_view(template_name='home.html'), name='home')`: Dodałem podstawową stronę główną, która po prostu wyświetli szablon `home.html`. Dostępna będzie pod adresem `/`.
 # * `path('', include('pages.urls'))`: Ta linia jest kluczowa. Mówi Django, że dla wszystkich ścieżek, które nie pasują do wcześniejszych wzorców (czyli `/admin/` czy `/`), ma szukać dalszych wzorców w pliku `pages/urls.py`. Dzięki temu `/o-nas/` zostanie przekazane do `pages/urls.py`, a tam zostanie dopasowane przez `<slug:slug>/`.



# Dodaj tę sekcję TYLKO w trybie deweloperskim (DEBUG=True)
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
    # Jeśli planujesz również serwować pliki statyczne w DEBUG=True (dla dev), możesz dodać:
    # urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)

================================================================================

#####################################
#
# Plik: core/wsgi.py
#
#####################################

"""
WSGI config for core project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')

application = get_wsgi_application()


================================================================================

#####################################
#
# Plik: deploy.sh
#
#####################################

#!/bin/bash

# Aktywuj środowisko wirtualne Django
echo "Aktywowanie środowiska wirtualnego..."
source ~/.virtualenvs/kagyu_env/bin/activate
if [ $? -ne 0 ]; then
    echo "BŁĄD: Nie udało się aktywować środowiska wirtualnego. Sprawdź ścieżkę do kagyu_env."
    exit 1
fi

# 1. Pobierz najnowsze zmiany z GitHuba
echo -e "\n--- Pobieranie najnowszych zmian z GitHub ---"
git pull origin master # Upewnij się, że 'master' to nazwa Twojej głównej gałęzi, zmień na 'main' jeśli to konieczne.
if [ $? -ne 0 ]; then
    echo "BŁĄD: git pull nie powiódł się. Sprawdź konflikty lub lokalne zmiany."
    exit 1
fi
echo "Pobrano zmiany."

# --- DODANY KROK: Instalacja/aktualizacja zależności ---
echo -e "\n--- Instalacja/aktualizacja zależności z requirements.txt ---"
pip install -r requirements.txt
if [ $? -ne 0 ]; then
    echo "BŁĄD: Instalacja zależności nie powiodła się."
    exit 1
fi
echo "Zależności zainstalowane/zaktualizowane."
# ----------------------------------------------------

# 2. Zbierz pliki statyczne
echo -e "\n--- Zbieranie plików statycznych ---"
python manage.py collectstatic --noinput
if [ $? -ne 0 ]; then
    echo "BŁĄD: collectstatic nie powiódł się."
    exit 1
fi
echo "Pliki statyczne zebrane."

# 3. Zapytaj o wykonanie migracji bazy danych
echo -e "\n--- Sprawdzanie i wykonywanie migracji bazy danych ---"
read -p "Czy chcesz wykonać migracje bazy danych? (y/n): " confirm_migrate
if [[ "$confirm_migrate" =~ ^[Yy]$ ]]; then
    python manage.py makemigrations
    python manage.py migrate
    if [ $? -ne 0 ]; then
        echo "BŁĄD: Migracje nie powiodły się."
        exit 1
    fi
    echo "Migracje wykonane."
else
    echo "Migracje pominięte."
fi

# 4. Przeładuj aplikację WWW na PythonAnywhere
echo -e "\n--- Przeładowywanie aplikacji WWW na PythonAnywhere ---"
# Dotknięcie pliku WSGI powoduje przeładowanie aplikacji
/usr/bin/touch /var/www/marcin108_pythonanywhere_com_wsgi.py
if [ $? -ne 0 ]; then
    echo "BŁĄD: Przeładowanie aplikacji nie powiodło się. Sprawdź ścieżkę do pliku WSGI."
    exit 1
fi
echo "Aplikacja WWW przeładowana."

echo -e "\n--- Wdrożenie zakończone pomyślnie! ---"

================================================================================

#####################################
#
# Plik: git-deploy.sh
#
#####################################

#!/bin/bash

echo "--- Rozpoczynanie lokalnego procesu deploymentu na GitHub ---"

# 1. Aktywuj środowisko wirtualne
echo -e "\nAktywowanie środowiska wirtualnego..."
source venv/bin/activate # Zakłada, że twoje venv to 'venv' w katalogu projektu
if [ $? -ne 0 ]; then
    echo "BŁĄD: Nie udało się aktywować środowiska wirtualnego. Sprawdź ścieżkę do venv."
    exit 1
fi
echo "Środowisko wirtualne aktywowane."

# 2. Zaktualizuj plik requirements.txt
echo -e "\n--- Aktualizacja requirements.txt ---"
pip freeze > requirements.txt
if [ $? -ne 0 ]; then
    echo "BŁĄD: Nie udało się zaktualizować requirements.txt."
    exit 1
fi
echo "requirements.txt zaktualizowany."

# 3. Dodaj wszystkie zmiany do staging area
echo -e "\n--- Dodawanie zmian do Git staging area ---"
git add .
if [ $? -ne 0 ]; then
    echo "BŁĄD: Nie udało się dodać zmian do staging area."
    exit 1
fi
echo "Wszystkie zmiany dodane."

# 4. Zapytaj o wiadomość commita
echo -e "\n--- Tworzenie commita ---"
read -p "Wprowadź wiadomość dla commita: " commit_message
if [ -z "$commit_message" ]; then
    commit_message="Lokalny deployment"
    echo "Brak wiadomości. Używam domyślnej: '$commit_message'"
fi

git commit -m "$commit_message"
if [ $? -ne 0 ]; then
    echo "BŁĄD: Commit nie powiódł się. Sprawdź, czy są jakieś zmiany do zatwierdzenia."
    # Opcjonalnie: git reset HEAD~1 jeśli chcesz cofnąć ostatnie add.
    exit 1
fi
echo "Zmiany zatwierdzone."

# 5. Wypchnij zmiany na GitHub
echo -e "\n--- Wypychanie zmian na GitHub ---"
git push origin master # Zmień 'master' na 'main', jeśli to nazwa Twojej głównej gałęzi
if [ $? -ne 0 ]; then
    echo "BŁĄD: git push nie powiódł się. Sprawdź połączenie lub uprawnienia."
    exit 1
fi
echo "Zmiany wypchnięte na GitHub!"

echo -e "\n--- Lokalny deployment zakończony pomyślnie! ---"
echo "Teraz możesz przejść na PythonAnywhere i uruchomić ./deploy.sh"


================================================================================

#####################################
#
# Plik: kod_plikow.py
#
#####################################

#!/usr/bin/env python3
import os
from datetime import datetime

def generate_tree(startpath, excluded_dirs, excluded_files, output_filename, excluded_extensions):
    """
    Generuje PEŁNĄ strukturę drzewa katalogów, oznaczając pliki pominięte przy kopiowaniu.
    """
    tree_lines = [f"Drzewo projektu (wygenerowano: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')})", "="*40]
    
    excluded_extensions_set = set(excluded_extensions)
    excluded_files_set = set(excluded_files)

    for root, dirs, files in os.walk(startpath, topdown=True):
        dirs[:] = [d for d in dirs if d not in excluded_dirs and not d.startswith('.')]
        
        level = root.replace(startpath, '').count(os.sep)
        indent = ' ' * 4 * level
        
        # Wyświetlanie nazwy katalogu
        if level == 0:
            # POPRAWKA: Używamy 'startpath' zamiast 'project_dir'
            tree_lines.append(f"{os.path.basename(startpath)}/")
        else:
            tree_lines.append(f"{indent}└── {os.path.basename(root)}/")

        subindent = ' ' * 4 * (level + 1)
        
        display_files = sorted([f for f in files if not f.startswith('.') and f != output_filename])

        for i, f in enumerate(display_files):
            connector = "└──" if i == len(display_files) - 1 else "├──"
            
            is_skipped = any(f.endswith(ext) for ext in excluded_extensions_set) or f in excluded_files_set
            annotation = "  (pominięty)" if is_skipped else ""
            
            tree_lines.append(f"{subindent}{connector} {f}{annotation}")
                
    return "\n".join(tree_lines)


def copy_project_files_to_single_file(project_dir, output_file):
    """
    Kopiuje zawartość plików tekstowych projektu do jednego pliku, dodając nagłówki 
    i PEŁNE drzewo katalogów na końcu.
    """
    # --- Konfiguracja Wykluczeń ---
    excluded_dirs = [
        'venv', '__pycache__', 'migrations', '.git', 'node_modules', 
        '.vscode', '.idea', 'build', 'dist', 'media', 'assets'
    ]
    excluded_files = [
        '.env', 'db.sqlite3', '.DS_Store'
    ]
    excluded_extensions = [
        '.pyc', '.log', '.bak', '.tmp', '.swp', '.db', '.sqlite3', '.png', '.jpg', 
        '.jpeg', '.gif', '.bmp', '.ico', '.webp', '.svg', '.tif', '.tiff', '.woff', 
        '.woff2', '.ttf', '.otf', '.eot', '.mp3', '.wav', '.ogg', '.mp4', '.mov', 
        '.avi', '.mkv', '.zip', '.rar', '.gz', '.tar', '.7z', '.pdf', '.doc', 
        '.docx', '.xls', '.xlsx', '.exe', '.dll', '.so', '.bin'
    ]

    project_dir = os.path.expanduser(project_dir)
    output_file = os.path.expanduser(output_file)
    output_filename = os.path.basename(output_file)

    files_to_process = []
    
    for root, dirs, files in os.walk(project_dir):
        dirs[:] = [d for d in dirs if d not in excluded_dirs and not d.startswith('.')]
        
        for file in files:
            if file == output_filename or file.startswith('.') or file in excluded_files:
                continue
            if any(file.endswith(ext) for ext in excluded_extensions):
                continue
            file_path = os.path.join(root, file)
            files_to_process.append(file_path)

    with open(output_file, 'w', encoding='utf-8') as outfile:
        outfile.write(f"Połączona zawartość projektu: {os.path.basename(project_dir)}\n")
        outfile.write(f"Wygenerowano: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        outfile.write(f"Liczba przetworzonych plików tekstowych: {len(files_to_process)}\n")
        outfile.write("\n" + "="*80 + "\n\n")

        for file_path in sorted(files_to_process):
            relative_path = os.path.relpath(file_path, project_dir)
            header = f"""#####################################
#
# Plik: {relative_path.replace(os.sep, '/')}
#
#####################################\n\n"""
            outfile.write(header)
            
            try:
                with open(file_path, 'r', encoding='utf-8') as infile:
                    content = infile.read()
                    outfile.write(content)
            except UnicodeDecodeError:
                outfile.write(f"--- UWAGA: Plik '{relative_path}' nie mógł zostać odczytany jako tekst ---")
            except Exception as e:
                outfile.write(f"Błąd podczas odczytu pliku {file_path}: {e}")
            
            outfile.write("\n\n" + "="*80 + "\n\n")
        
        outfile.write("\n\n" + "="*30 + " STRUKTURA PROJEKTU " + "="*30 + "\n\n")
        project_tree = generate_tree(project_dir, excluded_dirs, excluded_files, output_filename, excluded_extensions)
        outfile.write(project_tree)
        outfile.write("\n\n" + "="*80 + "\n")

    print(f"Projekt został pomyślnie zapisany do pliku: {output_file}")


# --- Uruchomienie skryptu ---
project_directory = '~/kagyu_mini_cms'
output_file_path = '~/kagyu_mini_cms/combined_project_files.txt'
copy_project_files_to_single_file(project_directory, output_file_path)

================================================================================

#####################################
#
# Plik: manage.py
#
#####################################

#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()


================================================================================

#####################################
#
# Plik: news/__init__.py
#
#####################################



================================================================================

#####################################
#
# Plik: news/admin.py
#
#####################################

# news/admin.py
from django.contrib import admin
from .models import Article # Upewnij się, że importujesz model Article
from tinymce.widgets import TinyMCE
from django import forms

class ArticleAdminForm(forms.ModelForm):
    content = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 30}))
    class Meta:
        model = Article
        fields = '__all__'
        
@admin.register(Article)
class ArticleAdmin(admin.ModelAdmin):
    form = ArticleAdminForm
    # DODAJEMY 'pin_order' DO LISTY
    list_display = ('title', 'published_date', 'is_published', 'is_pinned', 'pin_order', 'updated_at')
    list_filter = ('is_published', 'is_pinned', 'published_date')
    search_fields = ('title', 'content')
    prepopulated_fields = {'slug': ('title',)}
    date_hierarchy = 'published_date'
    ordering = ('-published_date',)

    fieldsets = (
        (None, {
            'fields': ('title', 'slug', 'thumbnail', 'content')
        }),
        ('Ustawienia Publikacji', {
            # DODAJEMY 'pin_order' DO FORMULARZA
            'fields': ('published_date', 'is_published', 'is_pinned', 'pin_order'),
            'classes': ('collapse',),
        }),
    )

================================================================================

#####################################
#
# Plik: news/apps.py
#
#####################################

from django.apps import AppConfig


class NewsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'news'


================================================================================

#####################################
#
# Plik: news/models.py
#
#####################################

# news/models.py
from django.db import models
from django.utils.text import slugify
from tinymce.models import HTMLField
from django.utils import timezone
from django.urls import reverse # Dodaj ten import

class Article(models.Model):
    title = models.CharField(max_length=250, verbose_name="Tytuł artykułu/posta")
    slug = models.SlugField(max_length=250, unique=True, blank=True,
                help_text="Przyjazny adres URL, np. 'nowy-kurs-medytacyjny'. Zostaw puste, aby wygenerować automatycznie.")
    content = HTMLField(verbose_name="Treść artykułu/posta")
    thumbnail = models.ImageField(upload_to='news_thumbnails/', blank=True, null=True, verbose_name="Obraz miniatury")
    published_date = models.DateTimeField(default=timezone.now, verbose_name="Data publikacji")
    is_published = models.BooleanField(default=True, verbose_name="Opublikowana? artykuły nieopublikowane nie będą widoczne na stronie.",
                help_text="Zaznacz, jeśli artykuł ma być widoczny publicznie.")
    is_pinned = models.BooleanField(default=False, verbose_name="Przypięta?",
                help_text="Zaznacz, aby przypiąć artykuł na górze listy. Artykuły nieprzypięte będą sortowane według daty publikacji.")
    pin_order = models.PositiveIntegerField(default=0, verbose_name="Kolejność przypięcia",
                help_text="Niższa liczba = wyższa pozycja na liście. Używane tylko dla przypiętych artykułów.")

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "Aktualność"
        verbose_name_plural = "Aktualności"
        # Sortowanie, które będzie używane domyślnie, ale zostanie nadpisane w widokach
        ordering = ['-published_date'] 

    def __str__(self):
        return self.title

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.title)
        super().save(*args, **kwargs)

    def get_absolute_url(self):
        return reverse('news:article_detail', kwargs={'slug': self.slug}) # Zakłada, że masz url 'news:article_detail'

================================================================================

#####################################
#
# Plik: news/templatetags/__init__.py
#
#####################################

# aby obsługiwać w szablonach filtry get_item i month_name stworzyłem templatetags i filtry dla nich.
# plik musi być w katalogu templates/news/templatetags/__init__.py
#

================================================================================

#####################################
#
# Plik: news/templatetags/news_filters.py
#
#####################################

from django import template
import calendar
import re # Możesz usunąć 'import re', jeśli nie jest używane przez inne filtry

register = template.Library()

@register.filter(name='get_item')
def get_item(dictionary, key):
    """
    Pozwala na dostęp do elementów słownika w szablonach za pomocą klucza.
    Użycie: {{ my_dict|get_item:key }}
    """
    return dictionary.get(key)

@register.filter(name='month_name')
def month_name(month_number):
    """
    Zwraca polską nazwę miesiąca dla podanego numeru.
    """
    month_names_pl = [
        "", "styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec",
        "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"
    ]
    if 1 <= month_number <= 12:
        return month_names_pl[month_number]
    return ""

@register.filter(name='starts_with')
def starts_with(value, arg):
    """
    Sprawdza, czy string zaczyna się od podanego argumentu.
    Użycie: {{ some_string|starts_with:"prefix" }}
    """
    return value.startswith(arg)

# --- Pamiętaj, aby usunąć stąd funkcję replace_links_for_footer ---

================================================================================

#####################################
#
# Plik: news/tests.py
#
#####################################

from django.test import TestCase

# Create your tests here.


================================================================================

#####################################
#
# Plik: news/urls.py
#
#####################################

# news/urls.py
from django.urls import path
from . import views

app_name = 'news'

urlpatterns = [
    # Najpierw umieść bardziej specyficzne wzorce URL dla archiwum
    path('archiwum/', views.archive_view, name='archive_all'),
    path('archiwum/<int:year>/', views.archive_view, name='archive_year'),
    path('archiwum/<int:year>/<int:month>/', views.archive_view, name='archive_month'),

    # Następnie lista aktualności (bardziej ogólna)
    path('', views.ArticleListView.as_view(), name='list'),

    # Na końcu szczegóły pojedynczej aktualności (catch-all dla slugów)
    path('<slug:slug>/', views.article_detail, name='article_detail'), # ZMIENIONO: name='detail' na name='article_detail'
]

================================================================================

#####################################
#
# Plik: news/views.py
#
#####################################

# news/views.py
from django.shortcuts import render, get_object_or_404
from django.views.generic import ListView
from .models import Article
from django.utils import timezone
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger # Do paginacji
import calendar # Do nazw miesięcy w archiwum
from django.db.models import Count # Do liczenia artykułów w archiwum


class ArticleListView(ListView):
    model = Article
    template_name = 'news/article_list.html'
    context_object_name = 'articles' # Zostawiamy 'articles' zgodnie z Twoim plikiem
    paginate_by = 5

    def get_queryset(self):
        # Pobieramy tylko aktualności, które są opublikowane (is_published=True)
        # i których data publikacji jest mniejsza lub równa bieżącej dacie/czasowi.
        # Sortowanie: najpierw przypięte (True to 1, False to 0, więc malejąco),
        # potem data publikacji malejąco (najnowsze na górze).
        queryset = Article.objects.filter(
            is_published=True,
            published_date__lte=timezone.now()
        ).order_by('-is_pinned', 'pin_order', '-published_date') # <-- ZMODYFIKOWANA LINIA
        return queryset


def article_detail(request, slug):
    """
    Widok wyświetlający szczegóły pojedynczej aktualności.
    Artykuł musi być opublikowany i mieć datę publikacji <= bieżącej.
    """
    article = get_object_or_404(
        Article,
        slug=slug,
        is_published=True, # DODANO: upewniamy się, że artykuł jest opublikowany
        published_date__lte=timezone.now()
    )
    return render(request, 'news/article_detail.html', {'article': article})


def archive_view(request, year=None, month=None):
    # Początkowy queryset: tylko opublikowane artykuły z datą publikacji <= teraz
    articles_queryset = Article.objects.filter(
        is_published=True, # DODANO: upewniamy się, że artykuły są opublikowane
        published_date__lte=timezone.now()
    )

    # Filtrowanie po roku i/lub miesiącu, jeśli podano
    if year:
        articles_queryset = articles_queryset.filter(published_date__year=year)
    if month:
        articles_queryset = articles_queryset.filter(published_date__month=month)

    # Sortowanie dla archiwum: najpierw przypięte, potem data publikacji malejąco
    articles_queryset = articles_queryset.order_by('-is_pinned', '-published_date') # DODANO: sortowanie po is_pinned

    # --- Paginacja ---
    paginator = Paginator(articles_queryset, 5) # Liczba artykułów na stronę (możesz dostosować)
    page_number = request.GET.get('page')
    try:
        articles_paged = paginator.page(page_number) # Zmieniono nazwę zmiennej na articles_paged
    except PageNotAnInteger:
        articles_paged = paginator.page(1)
    except EmptyPage:
        articles_paged = paginator.page(paginator.num_pages)
    # ------------------

    # --- Generowanie danych dla paska bocznego archiwum ---
    # Pobierz unikalne lata i miesiące z liczbą artykułów dla każdego miesiąca
    # Tylko z opublikowanych artykułów i tych, których data publikacji <= teraz
    archive_data = Article.objects.filter(
        is_published=True,
        published_date__lte=timezone.now()
    ).values('published_date__year', 'published_date__month') \
     .annotate(count=Count('id')) \
     .order_by('-published_date__year', '-published_date__month')

    # Strukturyzowanie danych archiwum (lata z zagnieżdżonymi miesiącami)
    archive_years_structured = {}
    for item in archive_data:
        year_num = item['published_date__year']
        month_num = item['published_date__month']
        
        if year_num not in archive_years_structured:
            archive_years_structured[year_num] = []
        
        # Dodajemy informacje o miesiącu i liczbie artykułów
        archive_years_structured[year_num].append({
            'month_num': month_num,
            'month_name': calendar.month_name[month_num], # Używamy calendar.month_name
            'count': item['count']
        })
    
    # Sortowanie miesięcy w ramach każdego roku (od najnowszego do najstarszego)
    for year_val in archive_years_structured:
        archive_years_structured[year_val].sort(key=lambda x: x['month_num'], reverse=True)
    # --------------------------------------------------------

    # --- Dynamiczny tytuł archiwum ---
    archive_title = "Archiwum"
    if year and month:
        try:
            month_name_str = calendar.month_name[int(month)]
            archive_title = f"Archiwum: {month_name_str.capitalize()} {year}"
        except (ValueError, IndexError):
            pass # Jeśli month jest niepoprawne, pozostanie "Archiwum"
    elif year:
        archive_title = f"Archiwum: Rok {year}"
    # ---------------------------------

    context = {
        'articles': articles_paged, # Zmieniono nazwę zmiennej na 'articles' dla spójności
        'selected_year': year,
        'selected_month': month,
        'archive_years_structured': archive_years_structured, # Przekazujemy ustrukturyzowane dane
        'archive_title': archive_title, # Dynamiczny tytuł
    }
    return render(request, 'news/archive_list.html', context)

================================================================================

#####################################
#
# Plik: pages/__init__.py
#
#####################################



================================================================================

#####################################
#
# Plik: pages/admin.py
#
#####################################

# pages/admin.py
from django.contrib import admin
from .models import Page
from tinymce.widgets import TinyMCE # Jeśli używasz TinyMCE dla treści
from django import forms # Potrzebne do formularza TinyMCE

class PageAdminForm(forms.ModelForm):
    content = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 30}))
    class Meta:
        model = Page
        fields = '__all__'

@admin.register(Page)
class PageAdmin(admin.ModelAdmin):
    form = PageAdminForm # Przypisz formularz z TinyMCE
    list_display = ('title', 'slug', 'is_published', 'order', 'updated_at') # Dodano 'is_published' i 'order'
    list_filter = ('is_published',) # Pozwoli filtrować po statusie publikacji
    search_fields = ('title', 'content')
    prepopulated_fields = {'slug': ('title',)}
    ordering = ('order', 'title') # Sortowanie w panelu admina po kolejności i tytule

    # Opcjonalnie: fieldsets do lepszej organizacji formularza edycji
    fieldsets = (
        (None, {
            'fields': ('title', 'slug', 'content', 'header_image')
        }),
        ('Ustawienia Strony', {
            'fields': ('is_published', 'order'),
            'classes': ('collapse',), # Zwijany panel dla tych ustawień
        }),
    )

================================================================================

#####################################
#
# Plik: pages/apps.py
#
#####################################

from django.apps import AppConfig


class PagesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'pages'


================================================================================

#####################################
#
# Plik: pages/models.py
#
#####################################

# pages/models.py
from django.db import models
from django.utils.text import slugify
from tinymce.models import HTMLField
from django.urls import reverse # Dodaj ten import

class Page(models.Model):
    title = models.CharField(max_length=200, verbose_name="Tytuł strony")
    slug = models.SlugField(max_length=200, unique=True, blank=True,
                            help_text="Przyjazny adres URL, np. 'o-nas'. Zostaw puste, aby wygenerować automatycznie.")
    content = HTMLField(verbose_name="Treść strony")


    #Pole do przesyłania obrazów.
    #upload_to='page_headers/': Określa podkatalog w MEDIA_ROOT, do którego będą przesyłane obrazy (np. media/page_headers/moj_obraz.jpg).
    #blank=True, null=True: Pozwala na pozostawienie tego pola pustego w formularzu i w bazie danych.
    header_image = models.ImageField(upload_to='page_headers/', blank=True, null=True, verbose_name="Obraz nagłówkowy")
    is_published = models.BooleanField(default=False, verbose_name="Opublikowana",
                                       help_text="Zaznacz, jeśli strona ma być widoczna publicznie.")
    order = models.IntegerField(default=0, verbose_name="Kolejność",
                                help_text="Kolejność wyświetlania w menu. Niższa liczba oznacza wyższą pozycję.")
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "Strona"
        verbose_name_plural = "Strony"
        ordering = ['order', 'title'] # Zmieniono sortowanie na uwzględniające 'order'

    def __str__(self):
        return self.title

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.title)
        super().save(*args, **kwargs)

    def get_absolute_url(self):
        return reverse('pages:detail', kwargs={'slug': self.slug}) # Zakłada, że masz url 'pages:detail'

================================================================================

#####################################
#
# Plik: pages/tests.py
#
#####################################

from django.test import TestCase

# Create your tests here.


================================================================================

#####################################
#
# Plik: pages/urls.py
#
#####################################

from django.urls import path
from . import views

app_name = 'pages' # Nazwa przestrzeni nazw dla adresów URL

urlpatterns = [
    # Ten wzorzec będzie pasował do adresów typu /o-nas/, /kontakt/, /moja-strona/
    path('<slug:slug>/', views.page_detail, name='detail'),
]

================================================================================

#####################################
#
# Plik: pages/views.py
#
#####################################

from django.shortcuts import render

# Create your views here.
from django.shortcuts import render, get_object_or_404
from .models import Page

def page_detail(request, slug):
    """
    Widok wyświetlający szczegóły pojedynczej strony.
    Pobiera stronę na podstawie jej 'slug' (unikalnego identyfikatora URL).
    """
    page = get_object_or_404(Page, slug=slug)
    return render(request, 'pages/page_detail.html', {'page': page})

================================================================================

#####################################
#
# Plik: requirements.txt
#
#####################################

asgiref==3.8.1
Django==5.2.3
django-tinymce==4.1.0
pillow==11.2.1
python-dotenv==1.1.0
sqlparse==0.5.3


================================================================================

#####################################
#
# Plik: site_config/__init__.py
#
#####################################



================================================================================

#####################################
#
# Plik: site_config/admin.py
#
#####################################

# site_config/admin.py
from django.contrib import admin
from tinymce.widgets import TinyMCE
from django import forms
from .models import HeaderContent, FooterContent
from django.utils.html import format_html, strip_tags

# Formularz dla HeaderContent
class HeaderContentAdminForm(forms.ModelForm):
    site_name = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 5}))
    # USUNIĘTO: tagline = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 5}))

    class Meta:
        model = HeaderContent
        fields = '__all__'

@admin.register(HeaderContent)
class HeaderContentAdmin(admin.ModelAdmin):
    form = HeaderContentAdminForm
    # USUNIĘTO 'tagline_preview' z list_display
    list_display = ('site_name_preview', 'logo_preview', 'header_bg_preview') 

    fieldsets = (
        (None, {
            # USUNIĘTO 'tagline' z fields
            'fields': ('site_name', 'logo', 'header_background_image'), 
            'description': "Nazwa strony/ośrodka wyświetlana w nagłówku. Obrazy dla logo i tła nagłówka."
        }),
    )

    def site_name_preview(self, obj):
        return strip_tags(obj.site_name)[:50] + "..." if obj.site_name else "Brak nazwy"
    site_name_preview.short_description = "Nazwa strony (podgląd)"

    # USUNIĘTO: metodę tagline_preview
    # def tagline_preview(self, obj):
    #     return strip_tags(obj.tagline)[:50] + "..." if obj.tagline else "Brak sloganu"
    # tagline_preview.short_description = "Slogan (podgląd)"

    def logo_preview(self, obj):
        if obj.logo:
            return format_html('<img src="{}" style="width: 50px; height:auto;" />', obj.logo.url)
        return "Brak logo"
    logo_preview.short_description = "Podgląd Logo"

    def header_bg_preview(self, obj):
        if obj.header_background_image:
            return format_html('<img src="{}" style="width: 50px; height:auto;" />', obj.header_background_image.url)
        return "Brak tła"
    header_bg_preview.short_description = "Podgląd Tła Nagłówka"

    def has_add_permission(self, request):
        return not HeaderContent.objects.exists()

    def has_delete_permission(self, request, obj=None):
        return False


# Formularz dla FooterContent (bez zmian w tej sekcji, jest poprawna)
class FooterContentAdminForm(forms.ModelForm):
    copyright_text = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 5}))
    address = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 10}))
    zobacz_tez_html = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 10}))
    osrodki_w_poblizu_html = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 10}))
    bank_info_html = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 10}))

    class Meta:
        model = FooterContent
        fields = '__all__'

@admin.register(FooterContent)
class FooterContentAdmin(admin.ModelAdmin):
    form = FooterContentAdminForm
    list_display = ('copyright_text_preview', 'contact_email', 'contact_phone')
    
    fieldsets = (
        ('Podstawowe Informacje Kontaktowe', {
            'fields': ('copyright_text', 'address', 'contact_email', 'contact_phone'),
            'description': "Podstawowe dane kontaktowe ośrodka."
        }),
        ('Sekcje Linków w Stopce', {
            'fields': (
                'zobacz_tez_html',
                'osrodki_w_poblizu_html'
            ),
            'description': "Wprowadź treści sekcji linków w stopce (np. listy linków)."
        }),
        ('Informacje o Wsparciu (Konto Bankowe)', {
            'fields': ('bank_info_html',),
            'description': "Wprowadź wszystkie dane bankowe w jednym bloku HTML."
        }),
    )

    def copyright_text_preview(self, obj):
        return strip_tags(obj.copyright_text)[:50] + "..." if obj.copyright_text else "Brak"
    copyright_text_preview.short_description = "Tekst praw autorskich (podgląd)"

    def has_add_permission(self, request):
        return not FooterContent.objects.exists()

    def has_delete_permission(self, request, obj=None):
        return False

================================================================================

#####################################
#
# Plik: site_config/apps.py
#
#####################################

from django.apps import AppConfig


class SiteConfigConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'site_config'


================================================================================

#####################################
#
# Plik: site_config/context_processors.py
#
#####################################

# site_config/context_processors.py
from .models import HeaderContent, FooterContent
from pages.models import Page
from news.models import Article # Jeśli potrzebujesz najnowszych artykułów w stopce

def global_website_content(request):
    header_content = HeaderContent.objects.first()
    footer_content = FooterContent.objects.first()

    all_pages = Page.objects.filter(is_published=True).order_by('order', 'title')

    # latest_articles = Article.objects.filter(is_published=True).order_by('-published_date')[:3] # Odkomentuj, jeśli potrzebujesz

    return {
        'header_content': header_content,
        'footer_content': footer_content,
        'all_pages': all_pages,
        # 'latest_articles': latest_articles, # Odkomentuj, jeśli potrzebujesz
    }

================================================================================

#####################################
#
# Plik: site_config/models.py
#
#####################################

# site_config/models.py
from django.db import models
from tinymce.models import HTMLField

class HeaderContent(models.Model):
    """
    Model do przechowywania treści nagłówka strony.
    Zaprojektowany tak, aby istniał tylko jeden rekord (singleton).
    """
    site_name = HTMLField(max_length=200, verbose_name="Nazwa Strony/Ośrodka", blank=True,
                                 help_text="Główna nazwa strony wyświetlana w nagłówku. Możesz używać formatowania HTML.")
    # tagline = HTMLField(max_length=255, verbose_name="Slogan/Podtytuł", blank=True, # Zmieniono na HTMLField
    #                           help_text="Krótki slogan lub opis wyświetlany pod nazwą strony. Możesz używać formatowania HTML.")
    logo = models.ImageField(upload_to='site_config/logos/', blank=True, null=True, verbose_name="Logo strony",
                             help_text="Obraz logo wyświetlany w nagłówku.")
    header_background_image = models.ImageField(upload_to='site_config/header_bgs/', blank=True, null=True,
                                                 verbose_name="Obraz tła nagłówka",
                                                 help_text="Obraz używany jako tło dla sekcji nagłówka strony.")

    class Meta:
        verbose_name = "Zawartość Nagłówka"
        verbose_name_plural = "Zawartość Nagłówka"

    def __str__(self):
        return "Globalna Zawartość Nagłówka"

    def save(self, *args, **kwargs):
        if self.__class__.objects.exists() and not self.pk:
            existing = self.__class__.objects.first()
            self.pk = existing.pk
        super().save(*args, **kwargs)

class FooterContent(models.Model):
    """
    Model do przechowywania treści stopki strony.
    Zaprojektowany tak, aby istniał tylko jeden rekord (singleton).
    """
    copyright_text = HTMLField(verbose_name="Tekst praw autorskich", blank=True,
                               help_text="Tekst informacji o prawach autorskich (np. © 2023 Twoja Nazwa).")
    address = HTMLField(verbose_name="Adres ośrodka", blank=True,
                        help_text="Pełny adres ośrodka, może zawierać formatowanie HTML.")
    contact_email = models.EmailField(blank=True, null=True, verbose_name="Adres E-mail",
                                      help_text="Główny adres e-mail do kontaktu.")
    contact_phone = models.CharField(max_length=50, blank=True, null=True, verbose_name="Numer Telefonu",
                                     help_text="Numer telefonu kontaktowego.")

    zobacz_tez_html = HTMLField(blank=True, verbose_name="Sekcja 'Zobacz też' (HTML)",
                                help_text="Wprowadź listę linków w formacie HTML (np. &lt;ul&gt;&lt;li&gt;&lt;a href='/url/'&gt;Tekst&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;).")
    osrodki_w_poblizu_html = HTMLField(blank=True, verbose_name="Sekcja 'Ośrodki w pobliżu' (HTML)",
                                        help_text="Wprowadź listę linków do ośrodków w pobliżu w formacie HTML (np. &lt;ul&gt;&lt;li&gt;&lt;a href='/url/'&gt;Tekst&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;).")
    bank_info_html = HTMLField(blank=True, verbose_name="Informacje Bankowe (HTML)",
                               help_text="Wprowadź wszystkie dane bankowe w jednym bloku HTML (np. nazwa banku, numer konta, SWIFT/BIC, tytuł przelewu).")

    class Meta:
        verbose_name = "Zawartość stopki"
        verbose_name_plural = "Zawartości stopki"

    def __str__(self):
        return "Globalna Zawartość Stopki" # Zmieniono dla spójności

    def save(self, *args, **kwargs):
        # Nadpisujemy metodę save, aby upewnić się, że w bazie istnieje tylko jeden rekord.
        if self.__class__.objects.exists() and not self.pk:
            existing = self.__class__.objects.first()
            self.pk = existing.pk
        super().save(*args, **kwargs)

================================================================================

#####################################
#
# Plik: site_config/tests.py
#
#####################################

from django.test import TestCase

# Create your tests here.


================================================================================

#####################################
#
# Plik: site_config/views.py
#
#####################################

from django.shortcuts import render

# Create your views here.


================================================================================

#####################################
#
# Plik: static/css/montserrat_fonts.css
#
#####################################

/* static/css/montserrat_fonts.css */

/* Montserrat Normal (Variable Font) */
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 100 900; /* Użyjemy pełnego zakresu, jeśli font to obsługuje */
  font-display: swap;
  src: url('../fonts/Montserrat-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; /* latin-ext */
}
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/Montserrat-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /* latin */
}

/* Montserrat Italic (Variable Font) */
@font-face {
  font-family: 'Montserrat';
  font-style: italic;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/Montserrat-Italic-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; /* latin-ext */
}
@font-face {
  font-family: 'Montserrat';
  font-style: italic;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/Montserrat-Italic-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /* latin */
}

================================================================================

#####################################
#
# Plik: static/css/old-style.css
#
#####################################

/* static/css/style.css */

/*
/----------------------------------------------------------------------------------
/   1. OGÓLNE STYLE / ZASADNICZE USTAWIENIA
/----------------------------------------------------------------------------------
*/
body {
    font-family: 'Open Sans', sans-serif;
    color: #333;
    line-height: 1.6;
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

/* Pseudoelement dla globalnego tła strony */
body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("/static/img/karma-kagyu-wirowka.png");
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    opacity: 0.1; /* Przezroczystość */
    z-index: -1; /* Tło pod wszystkimi elementami */
}

/* Zapewniamy, że elementy treści są widoczne nad tłem i mają własne tło, jeśli potrzebne */
header, footer, .center-name-section, .hero-section, main {
    position: relative;
    z-index: 1; /* Upewnia się, że te elementy są nad tłem body::before */
}

/* Jawne tła dla głównych sekcji, aby zakryć globalny obraz tła body::before */
header, .navbar, .main-content {
    background-color: #ffffff; /* Białe tło dla głównych sekcji */
}

h1, h2, h3, h4, h5, h6 {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    color: #4a4a4a;
}

.container {
    max-width: 1200px;
    padding-left: 15px;
    padding-right: 15px;
}

/*
/----------------------------------------------------------------------------------
/   2. STYLE NAGŁÓWKA I NAWIGACJI
/----------------------------------------------------------------------------------
*/
header {
    margin-bottom: 20px;
    z-index: 10; /* Wyższy z-index, aby nagłówek był zawsze na wierzchu */
}

/* Kontener nagłówka z obrazem tła */
.header-with-background {
    background-size: cover; /* Obraz pokrywa cały element */
    background-position: center center; /* Obraz wyśrodkowany */
    background-repeat: no-repeat; /* Obraz się nie powtarza */
    min-height: 250px; /* Minimalna wysokość nagłówka dla widoczności tła */
    
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Rozkłada elementy (navbar, center-name-section) pionowo */
} 

.navbar {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    box-shadow: none !important; /* Usunięto cień z paska nawigacyjnego */
    background-color: transparent !important; /* Tło w pełni przezroczyste, aby widoczne było tło headera */
    z-index: 10; /* Upewnia się, że menu jest nad innymi elementami w headerze */
}

.navbar .container-fluid {
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}

.navbar-toggler {
    order: 1;
    margin-right: auto;
    border: none;
}

.navbar-brand {
    padding: 0;
    margin-left: auto;
    order: 2;
}

@media (min-width: 992px) {
    .navbar-brand {
        margin-left: auto;
        order: last;
    }
    .navbar-toggler {
        display: none;
    }
    .navbar-collapse {
        order: 0;
    }
}

.navbar-nav .nav-link {
    color: #ffffff; /* Zmieniono kolor domyślny linków na biały */
    font-weight: 600;
    padding-left: 1rem;
    padding-right: 1rem;
    transition: color 0.3s ease-in-out, text-shadow 0.3s ease-in-out; /* Dodano transition dla text-shadow */
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7); /* Dodano cień dla lepszej czytelności */
}
/* Jeśli tło headera jest ciemne, rozważ zmianę koloru linków na biały dla lepszej czytelności */
/*
.header-with-background .navbar-nav .nav-link {
    color: #ffffff;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
}
*/

.navbar-nav .nav-link:hover {
    color: #d7073a; /* Kolor czerwony po najechaniu (dla kontrastu z białym) */
    text-shadow: none; /* Opcjonalnie usuń cień po najechaniu, aby link "wyskoczył" */
}

.navbar-nav .nav-link.active {
    color: #d7073a; /* Aktywny link nadal będzie czerwony */
    font-weight: 700;
    text-shadow: none; /* Opcjonalnie usuń cień dla aktywnego linku */
}

/*
/----------------------------------------------------------------------------------
/   3. SEKCJA Z NAZWĄ OŚRODKA (Center Name Section)
/----------------------------------------------------------------------------------
*/
.center-name-section {
    background-color: rgba(0, 0, 0, 0.5) !important; /* Ciemne, półprzezroczyste tło */
    border: none; /* Usunięto wszystkie obramowania */
    padding: 20px 0; /* Zwiększony padding dla lepszego wyglądu */
    box-shadow: none; /* Usunięto cień */
    z-index: 5;
    margin-top: auto; /* Wypycha sekcję na dół kontenera flex (header) */
    color: #ffffff; /* Biały tekst dla lepszej czytelności na ciemnym tle */
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7); /* Ciekawe cienie dla tekstu */
}

.center-name-section .container {
    max-width: 960px;
}

.center-name-section .center-title {
    color: #ffffff; /* Upewnia się, że tekst tytułu jest biały */
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 2.5rem; /* Większy rozmiar czcionki */
    margin-bottom: 0;
    line-height: 1.2;
}

@media (max-width: 768px) {
    .center-name-section .center-title {
        font-size: 1.8rem; /* Mniejszy rozmiar czcionki na mobilnych */
    }
    .header-with-background {
        min-height: 180px; /* Mniejsza minimalna wysokość na urządzeniach mobilnych */
    }
}

/*
/----------------------------------------------------------------------------------
/   4. SEKCJA HERO (Baner)
/----------------------------------------------------------------------------------
*/
.hero-section {
    /* Upewnij się, że URL obrazu tła jest dynamicznie dostarczany przez Django w szablonie */
    background-size: cover;
    background-position: center;
    color: #fff;
    padding: 80px 0;
    margin-bottom: 40px;
    border-radius: 8px;
    overflow: hidden;
    background-color: #333; /* Fallback kolor tła */
}

.hero-section h1 {
    font-size: 3.8rem;
    margin-bottom: 25px;
    text-shadow: 2px 2px 5px rgba(0,0,0,0.7);
    line-height: 1.2;
}

.hero-section .lead {
    font-size: 1.35rem;
    margin-bottom: 40px;
}

/*
/----------------------------------------------------------------------------------
/   5. TREŚĆ GŁÓWNA (Main Content)
/----------------------------------------------------------------------------------
*/
main {
    padding-top: 20px;
    padding-bottom: 40px;
    flex-grow: 1; /* Pozwala main na rozciąganie się i wypełnianie dostępnej przestrzeni */
    min-height: 100vh; /* Upewnia się, że zawartość główna jest wystarczająco wysoka */
    overflow: visible;
}

.main-content {
    padding-top: 20px;
    padding-bottom: 40px;
    flex-grow: 1;
}

/* Upewnienie się, że .row i .col-md-3 nie blokują sticky elementów */
.row, .col-md-3 {
    overflow: visible !important;
}

/* Style dla treści z TinyMCE (page-content, article-content) */
.page-content p, .article-content p {
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    color: #444;
}

.page-content img, .article-content img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 1.5rem auto;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

/*
/----------------------------------------------------------------------------------
/   6. KARTY (Articles, News, etc.)
/----------------------------------------------------------------------------------
*/
.card {
    border: 1px solid #e0e0e0;
    border-radius: 0.75rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    transition: transform 0.2s ease-in-out;
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 16px rgba(0,0,0,0.12);
}

.card-title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
}

.card-title a {
    color: #333;
    text-decoration: none;
    transition: color 0.2s ease-in-out;
}

.card-title a:hover {
    color: #d7073a;
    text-decoration: none;
}

.card-text small {
    color: #888;
    font-size: 0.85rem;
    display: block;
    margin-bottom: 0.5rem;
}

.card-text {
    font-size: 1rem;
    color: #444;
}

.card .img-fluid.rounded-start {
    height: 100%;
    object-fit: cover;
    border-top-left-radius: 0.75rem;
    border-bottom-left-radius: 0.75rem;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

@media (max-width: 767.98px) {
    .card .img-fluid.rounded-start {
        border-top-right-radius: 0.75rem;
        border-bottom-left-radius: 0;
    }
}

.card .btn-primary {
    background-color: #d7073a;
    border-color: #d7073a;
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
}

.card .btn-primary:hover {
    background-color: #b8062e;
    border-color: #b8062e;
}

/*
/----------------------------------------------------------------------------------
/   7. STYLE DLA PRZYPIĘTYCH ARTYKUŁÓW
/----------------------------------------------------------------------------------
*/
.pinned-article {
    border: 2px solid #d7073a; /* Czerwona ramka */
    box-shadow: 0 6px 16px rgba(215, 7, 58, 0.15); /* Cień z akcentem */
    background-color: #fffaf0; /* Lekko inny kolor tła */
    position: relative; /* Ważne dla np. etykiety "Przypięte" */
}

/* Opcjonalnie: Etykieta "Przypięte" */
.pinned-article .badge.bg-primary {
    background-color: #d7073a !important; /* Spójny kolor z motywem */
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 5px 10px;
    font-size: 0.8em;
    border-radius: 5px;
    z-index: 2; /* Upewnij się, że jest nad innymi elementami karty */
}

/*
/----------------------------------------------------------------------------------
/   8. SIDEBAR (Archiwum / Spis Treści)
/----------------------------------------------------------------------------------
*/

/* Karta w sidebarze (dotyczy zarówno Archiwum, jak i Spisu Treści) */
.col-md-3 .card {
    background-color: #f8f9fa;
    border: 1px solid #e0e0e0;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    border-radius: 0.75rem;
    padding: 15px;
    /* Usunięto 'position: static !important;' - nie jest konieczne, jeśli '.card' nie ma globalnego 'position: relative' */
}

.col-md-3 .card-body {
    padding: 0;
}

/* Tytuły w sidebarze (np. "Archiwum", "Spis Treści") */
.col-md-3 .card-title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 1.4rem;
    color: #4a4a4a;
    margin-bottom: 1rem;
    padding-bottom: 5px;
    border-bottom: 2px solid #d7073a;
}

/* Lista lat i miesięcy w sidebarze (Archiwum) */
.col-md-3 .list-unstyled {
    list-style: none;
    padding: 0;
}

.col-md-3 .list-unstyled li {
    margin-bottom: 5px;
}

.col-md-3 .list-unstyled a {
    color: #555;
    text-decoration: none;
    padding: 3px 0;
    display: block;
    transition: color 0.2s ease-in-out;
}

.col-md-3 .list-unstyled a:hover {
    color: #d7073a;
    text-decoration: none;
}

/* Style dla aktywnego roku/miesiąca */
.col-md-3 .list-unstyled a.fw-bold {
    color: #d7073a !important;
    font-weight: 700;
}

/* Lista miesięcy pod rokiem */
.col-md-3 .list-unstyled .ms-3 {
    margin-top: 5px;
    margin-bottom: 5px;
}

/*
/----------------------------------------------------------------------------------
/   9. SPIS TREŚCI (Table of Contents)
/----------------------------------------------------------------------------------
*/

/* Ogólne style dla linków w spisie treści (zarówno desktop, jak i mobile) */
#table-of-contents-desktop .nav-link,
#table-of-contents-mobile .nav-link {
    color: #4a4a4a;
    padding: 6px 0;
    font-size: 0.95rem;
    transition: all 0.2s ease-in-out;
    text-decoration: none;
}

#table-of-contents-desktop .nav-link:hover,
#table-of-contents-mobile .nav-link:hover {
    color: #d7073a;
    background-color: transparent;
}

/* Styl dla aktywnego linku - użyjmy koloru akcentu */
#table-of-contents-desktop .nav-link.active-toc-link,
#table-of-contents-mobile .nav-link.active-toc-link {
    color: #d7073a;
    font-weight: 700;
    border-left: 3px solid #d7073a;
    padding-left: 7px;
    background-color: transparent;
}

/* Styl dla spisu treści na desktopie (lewa strona) */
#table-of-contents-desktop {
    padding: 10px 0;
}

/* --- Styl dla spisu treści na urządzeniach mobilnych (Accordion/Collapse) --- */
/* Kontener Collapse (gdzie jest ukryte menu mobilne) */
#table-of-contents-mobile-collapse {
    border-top: 1px dashed #e0e0e0;
    padding-top: 10px;
    margin-top: 10px;
}

#table-of-contents-mobile .nav-link {
    padding: 10px 5px;
    border-bottom: 1px solid #f0f0f0;
}

#table-of-contents-mobile .nav-link:last-child {
    border-bottom: none;
}

#table-of-contents-mobile .nav-link:hover {
    background-color: rgba(215, 7, 58, 0.05);
    color: #d7073a;
}

#table-of-contents-mobile .nav-link.active-toc-link {
    background-color: rgba(215, 7, 58, 0.1);
}

/* Przycisk mobilnego spisu treści */
.card.d-md-none .btn-outline-secondary {
    border-color: #d7073a;
    color: #d7073a;
    font-weight: 600;
    transition: all 0.2s ease-in-out;
}
.card.d-md-none .btn-outline-secondary:hover {
    background-color: #d7073a;
    color: #fff;
}

/*
/----------------------------------------------------------------------------------
/   10. POWRÓT NA GÓRĘ (Back-to-Top Button)
/----------------------------------------------------------------------------------
*/
#back-to-top {
    display: none;
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    width: 50px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    background-color: #d7073a;
    color: #ffffff;
    border: none;
    cursor: pointer;
    font-size: 3rem;
    font-weight: bold;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    transition: background-color 0.3s ease, transform 0.2s ease;
    border-radius: 0.5rem;
}

#back-to-top:hover {
    background-color: #b8062e;
    transform: translateY(-2px);
}

/*
/----------------------------------------------------------------------------------
/   11. STOPKA (Footer)
/----------------------------------------------------------------------------------
*/
footer {
    background-color: #212529; /* Ciemne tło stopki, jeśli nie ma go już z Bootstrapa */
    color: #ffffff;
}

/*
/----------------------------------------------------------------------------------
/   12. STYLE LINKÓW W STOPCE
/----------------------------------------------------------------------------------
*/
footer a {
    color: #ffffff; /* Domyślny kolor linków - biały */
    text-decoration: none; /* Brak podkreślenia */
    transition: color 0.3s ease-in-out; /* Płynne przejście koloru */
}

footer a:hover {
    color: rgba(255, 255, 255, 0.7); /* Jaśniejszy kolor po najechaniu (lekko przyciemniony biały) */
    text-decoration: none; /* Upewnij się, że nadal nie ma podkreślenia */
}

/* Specjalna klasa dla linków generowanych przez TinyMCE */
.footer-link-hover-dark {
    color: #ffffff; /* Domyślny kolor - biały */
    text-decoration: none; /* Brak podkreślenia */
    transition: color 0.3s ease-in-out; /* Płynne przejście koloru */
}

.footer-link-hover-dark:hover {
    color: rgba(255, 255, 255, 0.7); /* Jaśniejszy kolor po najechaniu */
    text-decoration: none; /* Upewnij się, że nadal nie ma podkreślenia */
}

/* Przeładowanie stylów dla linków wewnątrz divów z text-white (jeśli istnieją takie divy) */
footer .text-white a {
    color: #ffffff;
    text-decoration: none;
}

footer .text-white a:hover {
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
}

/*
/----------------------------------------------------------------------------------
/   13. PAGINACJA
/----------------------------------------------------------------------------------
*/
.pagination .page-item .page-link {
    color: #4a4a4a;
    border: 1px solid #dee2e6;
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, color 0.2s ease-in-out;
}

.pagination .page-item .page-link:hover {
    color: #ffffff;
    background-color: #d7073a;
    border-color: #d7073a;
}

.pagination .page-item.active .page-link {
    background-color: #d7073a;
    border-color: #d7073a;
    color: #ffffff;
    font-weight: 600;
}

.pagination .page-item.active .page-link:focus {
    box-shadow: 0 0 0 0.25rem rgba(215, 7, 58, 0.25);
}

.pagination .page-item.disabled .page-link {
    color: #6c757d;
    background-color: #f8f9fa;
    border-color: #dee2e6;
}

nav[aria-label="Page navigation"] {
    margin-top: 40px;
    margin-bottom: 40px;
}

/*
/----------------------------------------------------------------------------------
/   14. INNE / DODATKOWE STYLE
/----------------------------------------------------------------------------------
*/

/* Styl dla "Brak dostępnych aktualności." (dla archive_list i article_list) */
.lead {
    font-size: 1.1rem;
    color: #6c757d;
    text-align: center;
    padding: 20px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    background-color: #f8f9fa;
    margin-top: 20px;
}

/* Styl dla paska wyszukiwania w nagłówku */
.navbar-search-form {
    flex-grow: 1;
    margin-left: 1rem;
    margin-right: 1rem;
}

@media (max-width: 991.98px) {
    .navbar-search-form {
        width: 100%;
        margin-top: 1rem;
        order: 3;
    }
}

================================================================================

#####################################
#
# Plik: static/css/playfair_display_fonts.css
#
#####################################

/* static/css/playfair_display_fonts.css */

/* Playfair Display Normal (Variable Font) */
@font-face {
  font-family: 'Playfair Display';
  font-style: normal;
  font-weight: 100 900; /* Użyjemy pełnego zakresu, jeśli font to obsługuje */
  font-display: swap;
  src: url('../fonts/PlayfairDisplay-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; /* latin-ext */
}
@font-face {
  font-family: 'Playfair Display';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/PlayfairDisplay-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /* latin */
}

/* Playfair Display Italic (Variable Font) */
@font-face {
  font-family: 'Playfair Display';
  font-style: italic;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/PlayfairDisplay-Italic-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; /* latin-ext */
}
@font-face {
  font-family: 'Playfair Display';
  font-style: italic;
  font-weight: 100 900;
  font-display: swap;
  src: url('../fonts/PlayfairDisplay-Italic-VariableFont_wght.ttf') format('truetype');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; /* latin */
}

================================================================================

#####################################
#
# Plik: static/css/style.css
#
#####################################

/* ==========================================================================
   1. USTAWIENIA GLOBALNE I PODSTAWOWE
   ========================================================================== */

body {
    font-family: 'Montserrat', sans-serif;
    margin: 0;
    padding-top: 70px; 
}

body.menu-open {
    overflow: hidden;
}


/* ==========================================================================
   2. GŁÓWNY NAGŁÓWEK (HEADER)
   ========================================================================== */

.site-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #ffffff;
    z-index: 1000;
    border-bottom: 1px solid #c1272d;
}

.header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 49px; 
    padding: 0 30px;
    position: relative;
}

.burger-menu-icon {
    cursor: pointer;
    z-index: 9999;
    position: relative;
}

.burger-menu-icon div {
    width: 28px;
    height: 3px;
    background-color: #333;
    margin: 5px 0;
    transition: all 0.4s ease-in-out;
}

.burger-menu-icon.open .line1 {
    transform: rotate(45deg) translate(5px, 5px);
}
.burger-menu-icon.open .line2 {
    opacity: 0;
}
.burger-menu-icon.open .line3 {
    transform: rotate(-45deg) translate(5px, -5px);
}


.logo-right {
    position: relative;
    top: 5px;
    z-index: 1; 
}

.logo-right img {
    height: 38px; 
    width: auto;
}


/* ==========================================================================
   3. GŁÓWNA TREŚĆ I STRUMIEŃ ARTYKUŁÓW
   ========================================================================== */

.content-container {
    max-width: 900px;
    margin: 40px auto;
    padding: 0 20px;
}

.page-main-title {
    font-family: 'Playfair Display', serif;
    text-align: center;
    font-size: 2.2rem;
    font-weight: 400;  
    color: #333;
    margin-bottom: 40px;
}

.article-entry {
    margin-bottom: 60px;
    border-bottom: none;
}

.article-entry:last-child {
    margin-bottom: 0;
}

.article-full-content img {
    max-width: 100%;
    height: auto;
    margin: 1.5rem 0;
}

.page-header-image {
    width: 100%;
    max-height: 400px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 40px;
}


/* ==========================================================================
   4. STYLE MOBILNE / RESPONSYWNOŚĆ
   ========================================================================== */

@media screen and (max-width: 768px) {
    .header-container {
        padding: 0 15px;
    }
    
    .logo-right img {
        height: 32px; 
    }

    .page-main-title {
        font-size: 1.5rem;
    }
}


/* ==========================================================================
   5. WYSUWANE MENU BOCZNE (SIDE MENU)
   ========================================================================== */

.menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    z-index: 8000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease-in-out, visibility 0s 0.5s;
}

.menu-overlay.open {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s ease-in-out;
}

.side-menu {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 33.33vw;
    min-width: 300px;
    max-width: 400px;
    background-color: rgba(255, 255, 255, 0.78); 
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    z-index: 8001;
    padding: 80px 50px;
    box-shadow: 4px 0px 15px rgba(0,0,0,0.1);
    transform: translateX(-100%);
    transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    overflow-y: auto;
}

@media (max-width: 900px) {
    .side-menu {
        width: 50vw;
    }
}
@media (max-width: 600px) {
    .side-menu {
        width: 80vw;
    }
}


.side-menu.open {
    transform: translateX(0);
}

.close-menu-btn {
    position: absolute;
    top: 15px;
    right: 25px;
    font-size: 2.5rem;
    color: #888;
    background: none;
    border: none;
    cursor: pointer;
    line-height: 1;
}

.main-menu-links {
    list-style: none;
    padding: 0;
    margin: 0;
}

.main-menu-links li {
    opacity: 0;
    transform: translateX(-20px);
    transition: opacity 0.4s ease, transform 0.4s ease;
}

.side-menu.open .main-menu-links li {
    opacity: 1;
    transform: translateX(0);
}

.side-menu.open .main-menu-links li:nth-child(1) { transition-delay: 0.15s; }
.side-menu.open .main-menu-links li:nth-child(2) { transition-delay: 0.20s; }
.side-menu.open .main-menu-links li:nth-child(3) { transition-delay: 0.25s; }
.side-menu.open .main-menu-links li:nth-child(4) { transition-delay: 0.30s; }
.side-menu.open .main-menu-links li:nth-child(5) { transition-delay: 0.35s; }


.main-menu-links a {
    display: block;
    padding: 10px 0;
    text-decoration: none;
    color: #222;
    font-size: 1.3rem;
    font-weight: 600;
    transition: color 0.2s;
}

.main-menu-links a:hover {
    color: #c1272d;
}

.toc-container {
    margin-top: 30px;
    padding-top: 15px;
    border-top: none; 
}

.toc-container ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.toc-link {
    display: block;
    padding: 8px 0;
    text-decoration: none;
    font-family: 'Montserrat', sans-serif;
    color: #333;
    font-weight: 600;
    font-size: 1.1rem;
    transition: color 0.2s;
}

.toc-link:hover {
    color: #c1272d;
}

.toc-h3 {
    padding-left: 15px; 
    font-size: 1rem;
    font-weight: 400;
    color: #444;
}

================================================================================

#####################################
#
# Plik: static/css/ver1-style.css
#
#####################################

/*
/----------------------------------------------------------------------------------
/   Koncepcja 3 (POPRAWIONA): Akcent Kolorystyczny i Dynamiczny Nagłówek
/   Gradient jako pseudo-element, obraz tła z HTML.
/----------------------------------------------------------------------------------
*/
header {
    margin-bottom: 20px;
    z-index: 10;
    position: relative; /* Potrzebne dla z-index */
    overflow: hidden; /* Upewnia się, że nic nie "wyjdzie" */
}

.header-with-background {
    background-size: cover; /* Obraz tła z HTML */
    background-position: center center;
    background-repeat: no-repeat;
    min-height: 280px; /* Minimalna wysokość nagłówka */
    
    display: flex;
    flex-direction: column;
    justify-content: flex-end; /* Elementy będą "przyklejone" do dolnej części nagłówka */
    align-items: center; /* Wyśrodkowanie horyzontalne dla flex-container */
    padding-bottom: 0;
    position: relative; /* Kluczowe dla pozycjonowania pseudo-elementu ::before */
} 

/* DEDYKOWANY PSEUDO-ELEMENT Z GRADIENTEM, BĘDZIE NAD OBRAZEM TŁA */
.header-with-background::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Gradient, który chcesz rozszerzyć na cały nagłówek */
    background: linear-gradient(to right, rgba(215, 7, 58, 0.7) 0%, rgba(0, 0, 0, 0.7) 100%); 
    z-index: 1; /* NAJNIŻSZY Z-INDEX - NAD OBRAZEM, POD TREŚCIĄ */
}

/* Sekcja z nazwą ośrodka - musi być nad pseudo-elementem */
.center-name-section {
    width: 100%;
    background-color: transparent !important; /* Przezroczyste, aby widzieć gradient z ::before */
    border: none;
    padding: 15px 0;
    box-shadow: none;
    z-index: 2; /* Wyższy niż ::before */
    color: #ffffff;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.8);
    position: relative; /* Potrzebne, aby z-index działał */
}

.center-name-section .center-title {
    color: #ffd700;
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 2.8rem;
    margin-bottom: 0;
    line-height: 1.2;
    text-align: center;
    text-shadow: 2px 2px 5px rgba(215, 7, 58, 0.8);
}

/* Pasek nawigacyjny - musi być nad pseudo-elementem */
.navbar {
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;
    background-color: transparent !important; /* Przezroczyste, aby widzieć gradient z ::before */
    z-index: 3; /* Najwyższy z-index - nad ::before i nazwą ośrodka */
    margin-top: 0; 
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    position: relative; /* Potrzebne, aby z-index działał */
}

.navbar .container-fluid {
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
}

/* Logo w nawigacji (bez zmian) */
.navbar-brand img {
    filter: drop-shadow(0px 0px 8px rgba(255,215,0,0.7));
}

/* Przyciski hamburgera na mobilnych (bez zmian) */
.navbar-toggler {
    border-color: rgba(255, 255, 255, 0.7);
}
.navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.9%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

/* Linki nawigacyjne (bez zmian) */
.navbar-nav .nav-link {
    color: #ffffff;
    font-weight: 600;
    padding-left: 1rem;
    padding-right: 1rem;
    transition: all 0.3s ease-in-out;
    text-shadow: 1px 1px 3px rgba(0,0,0,1);
    position: relative;
}

.navbar-nav .nav-link:hover {
    color: #ffd700;
    text-shadow: none;
    transform: translateY(-2px);
}

.navbar-nav .nav-link.active {
    color: #d7073a;
    font-weight: 700;
    text-shadow: none;
    border-bottom: 2px solid #d7073a;
    padding-bottom: 8px;
}

/* Media Queries dla responsywności (bez zmian) */
@media (max-width: 991.98px) {
    .header-with-background {
        min-height: 220px;
    }
    .center-name-section .center-title {
        font-size: 2rem;
    }
    .navbar .container-fluid {
        justify-content: space-between;
    }
    .navbar-collapse {
        background: rgba(0, 0, 0, 0.9);
        padding-top: 10px;
        padding-bottom: 10px;
    }
    .navbar-nav {
        width: 100%;
        text-align: center;
    }
    .navbar-nav .nav-item {
        margin-bottom: 5px;
    }
    .navbar-nav .nav-link.active {
        border-bottom: none;
    }
}
@media (max-width: 767.98px) {
    .header-with-background {
        min-height: 180px;
    }
    .center-name-section .center-title {
        font-size: 1.5rem;
        padding: 10px 0;
    }
}

/* Stopka dla Koncepcji 3 (bez zmian) */
footer {
    background-color: #0d0d0d;
    color: #ffffff;
    padding: 30px 0;
    margin-top: 30px;
    font-size: 0.9rem;
    text-align: center;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.4);
    border-top: 3px solid #d7073a;
}

footer a {
    color: #ffd700;
    text-decoration: none;
    transition: color 0.3s ease;
}

footer a:hover {
    color: #d7073a;
}

.social-icons a {
    color: #ffffff;
    font-size: 1.5rem;
    margin: 0 10px;
    transition: color 0.3s ease;
}

.social-icons a:hover {
    color: #ffd700;
}

================================================================================

#####################################
#
# Plik: static/fonts/OFL.txt
#
#####################################

Copyright 2017 The Playfair Display Project Authors (https://github.com/clauseggers/Playfair-Display), with Reserved Font Name "Playfair Display"

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license is copied below, and is also available with a FAQ at:
https://openfontlicense.org


-----------------------------------------------------------
SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007
-----------------------------------------------------------

PREAMBLE
The goals of the Open Font License (OFL) are to stimulate worldwide
development of collaborative font projects, to support the font creation
efforts of academic and linguistic communities, and to provide a free and
open framework in which fonts may be shared and improved in partnership
with others.

The OFL allows the licensed fonts to be used, studied, modified and
redistributed freely as long as they are not sold by themselves. The
fonts, including any derivative works, can be bundled, embedded, 
redistributed and/or sold with any software provided that any reserved
names are not used by derivative works. The fonts and derivatives,
however, cannot be released under any other type of license. The
requirement for fonts to remain under this license does not apply
to any document created using the fonts or their derivatives.

DEFINITIONS
"Font Software" refers to the set of files released by the Copyright
Holder(s) under this license and clearly marked as such. This may
include source files, build scripts and documentation.

"Reserved Font Name" refers to any names specified as such after the
copyright statement(s).

"Original Version" refers to the collection of Font Software components as
distributed by the Copyright Holder(s).

"Modified Version" refers to any derivative made by adding to, deleting,
or substituting -- in part or in whole -- any of the components of the
Original Version, by changing formats or by porting the Font Software to a
new environment.

"Author" refers to any designer, engineer, programmer, technical
writer or other person who contributed to the Font Software.

PERMISSION & CONDITIONS
Permission is hereby granted, free of charge, to any person obtaining
a copy of the Font Software, to use, study, copy, merge, embed, modify,
redistribute, and sell modified and unmodified copies of the Font
Software, subject to the following conditions:

1) Neither the Font Software nor any of its individual components,
in Original or Modified Versions, may be sold by itself.

2) Original or Modified Versions of the Font Software may be bundled,
redistributed and/or sold with any software, provided that each copy
contains the above copyright notice and this license. These can be
included either as stand-alone text files, human-readable headers or
in the appropriate machine-readable metadata fields within text or
binary files as long as those fields can be easily viewed by the user.

3) No Modified Version of the Font Software may use the Reserved Font
Name(s) unless explicit written permission is granted by the corresponding
Copyright Holder. This restriction only applies to the primary font name as
presented to the users.

4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font
Software shall not be used to promote, endorse or advertise any
Modified Version, except to acknowledge the contribution(s) of the
Copyright Holder(s) and the Author(s) or with their explicit written
permission.

5) The Font Software, modified or unmodified, in part or in whole,
must be distributed entirely under this license, and must not be
distributed under any other license. The requirement for fonts to
remain under this license does not apply to any document created
using the Font Software.

TERMINATION
This license becomes null and void if any of the above conditions are
not met.

DISCLAIMER
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE
COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL
DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM
OTHER DEALINGS IN THE FONT SOFTWARE.


================================================================================

#####################################
#
# Plik: static/fonts/README-Montserrat.txt
#
#####################################

Montserrat Variable Font
========================

This download contains Montserrat as both variable fonts and static fonts.

Montserrat is a variable font with this axis:
  wght

This means all the styles are contained in these files:
  Montserrat-VariableFont_wght.ttf
  Montserrat-Italic-VariableFont_wght.ttf

If your app fully supports variable fonts, you can now pick intermediate styles
that aren’t available as static fonts. Not all apps support variable fonts, and
in those cases you can use the static font files for Montserrat:
  static/Montserrat-Thin.ttf
  static/Montserrat-ExtraLight.ttf
  static/Montserrat-Light.ttf
  static/Montserrat-Regular.ttf
  static/Montserrat-Medium.ttf
  static/Montserrat-SemiBold.ttf
  static/Montserrat-Bold.ttf
  static/Montserrat-ExtraBold.ttf
  static/Montserrat-Black.ttf
  static/Montserrat-ThinItalic.ttf
  static/Montserrat-ExtraLightItalic.ttf
  static/Montserrat-LightItalic.ttf
  static/Montserrat-Italic.ttf
  static/Montserrat-MediumItalic.ttf
  static/Montserrat-SemiBoldItalic.ttf
  static/Montserrat-BoldItalic.ttf
  static/Montserrat-ExtraBoldItalic.ttf
  static/Montserrat-BlackItalic.ttf

Get started
-----------

1. Install the font files you want to use

2. Use your app's font picker to view the font family and all the
available styles

Learn more about variable fonts
-------------------------------

  https://developers.google.com/web/fundamentals/design-and-ux/typography/variable-fonts
  https://variablefonts.typenetwork.com
  https://medium.com/variable-fonts

In desktop apps

  https://theblog.adobe.com/can-variable-fonts-illustrator-cc
  https://helpx.adobe.com/nz/photoshop/using/fonts.html#variable_fonts

Online

  https://developers.google.com/fonts/docs/getting_started
  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide
  https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/variable-fonts

Installing fonts

  MacOS: https://support.apple.com/en-us/HT201749
  Linux: https://www.google.com/search?q=how+to+install+a+font+on+gnu%2Blinux
  Windows: https://support.microsoft.com/en-us/help/314960/how-to-install-or-remove-a-font-in-windows

Android Apps

  https://developers.google.com/fonts/docs/android
  https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts

License
-------
Please read the full license text (OFL.txt) to understand the permissions,
restrictions and requirements for usage, redistribution, and modification.

You can use them in your products & projects – print or digital,
commercial or otherwise.

This isn't legal advice, please consider consulting a lawyer and see the full
license for all details.


================================================================================

#####################################
#
# Plik: static/fonts/README_PlayfairDisplay.txt
#
#####################################

Playfair Display Variable Font
==============================

This download contains Playfair Display as both variable fonts and static fonts.

Playfair Display is a variable font with this axis:
  wght

This means all the styles are contained in these files:
  PlayfairDisplay-VariableFont_wght.ttf
  PlayfairDisplay-Italic-VariableFont_wght.ttf

If your app fully supports variable fonts, you can now pick intermediate styles
that aren’t available as static fonts. Not all apps support variable fonts, and
in those cases you can use the static font files for Playfair Display:
  static/PlayfairDisplay-Regular.ttf
  static/PlayfairDisplay-Medium.ttf
  static/PlayfairDisplay-SemiBold.ttf
  static/PlayfairDisplay-Bold.ttf
  static/PlayfairDisplay-ExtraBold.ttf
  static/PlayfairDisplay-Black.ttf
  static/PlayfairDisplay-Italic.ttf
  static/PlayfairDisplay-MediumItalic.ttf
  static/PlayfairDisplay-SemiBoldItalic.ttf
  static/PlayfairDisplay-BoldItalic.ttf
  static/PlayfairDisplay-ExtraBoldItalic.ttf
  static/PlayfairDisplay-BlackItalic.ttf

Get started
-----------

1. Install the font files you want to use

2. Use your app's font picker to view the font family and all the
available styles

Learn more about variable fonts
-------------------------------

  https://developers.google.com/web/fundamentals/design-and-ux/typography/variable-fonts
  https://variablefonts.typenetwork.com
  https://medium.com/variable-fonts

In desktop apps

  https://theblog.adobe.com/can-variable-fonts-illustrator-cc
  https://helpx.adobe.com/nz/photoshop/using/fonts.html#variable_fonts

Online

  https://developers.google.com/fonts/docs/getting_started
  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide
  https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/variable-fonts

Installing fonts

  MacOS: https://support.apple.com/en-us/HT201749
  Linux: https://www.google.com/search?q=how+to+install+a+font+on+gnu%2Blinux
  Windows: https://support.microsoft.com/en-us/help/314960/how-to-install-or-remove-a-font-in-windows

Android Apps

  https://developers.google.com/fonts/docs/android
  https://developer.android.com/guide/topics/ui/look-and-feel/downloadable-fonts

License
-------
Please read the full license text (OFL.txt) to understand the permissions,
restrictions and requirements for usage, redistribution, and modification.

You can use them in your products & projects – print or digital,
commercial or otherwise.

This isn't legal advice, please consider consulting a lawyer and see the full
license for all details.


================================================================================

#####################################
#
# Plik: static/img/sommerkurs2022-header.jpg~
#
#####################################

--- UWAGA: Plik 'static/img/sommerkurs2022-header.jpg~' nie mógł zostać odczytany jako tekst ---

================================================================================

#####################################
#
# Plik: static/js/menu.js
#
#####################################

// static/js/menu.js

document.addEventListener('DOMContentLoaded', () => {

    // --- LOGIKA GŁÓWNEGO MENU ---
    const burgerBtn = document.getElementById('burger-menu-icon');
    const sideMenu = document.getElementById('side-menu');
    const overlay = document.getElementById('menu-overlay');
    const closeBtn = document.getElementById('close-menu-btn');
    const body = document.body;

    const openMenu = () => {
        burgerBtn.classList.add('open');
        sideMenu.classList.add('open');
        overlay.classList.add('open');
        body.classList.add('menu-open');
    };

    const closeMenu = () => {
        burgerBtn.classList.remove('open');
        sideMenu.classList.remove('open');
        overlay.classList.remove('open');
        body.classList.remove('menu-open');
    };

    if (burgerBtn && sideMenu && overlay && closeBtn) {
        burgerBtn.addEventListener('click', openMenu);
        closeBtn.addEventListener('click', closeMenu);
        overlay.addEventListener('click', closeMenu);
    }

    // --- LOGIKA GENEROWANIA SPISU TREŚCI (TOC) ---
    const generateTableOfContents = () => {
        const contentSource = document.getElementById('page-content');
        const tocContainer = document.getElementById('toc-container');

        // Uruchom tylko, jeśli na stronie jest kontener na treść i na spis treści
        if (!contentSource || !tocContainer) {
            return;
        }

        const headings = contentSource.querySelectorAll('h2, h3');
        if (headings.length === 0) {
            return; // Nie generuj spisu, jeśli nie ma nagłówków
        }

        let tocHTML = '<ul>';
        headings.forEach((heading, index) => {
            // Nadaj unikalne ID nagłówkowi, jeśli go nie ma
            let id = heading.getAttribute('id');
            if (!id) {
                id = 'toc-heading-' + index;
                heading.setAttribute('id', id);
            }

            // Sprawdź, czy to H2 czy H3, aby dodać odpowiednią klasę dla wcięcia
            const isH3 = heading.tagName.toLowerCase() === 'h3';
            const linkClass = isH3 ? 'toc-link toc-h3' : 'toc-link';

            tocHTML += `<li><a href="#${id}" class="${linkClass}">${heading.textContent}</a></li>`;
        });
        tocHTML += '</ul>';

        tocContainer.innerHTML = tocHTML;

        // Płynne przewijanie do kotwicy po kliknięciu linku w spisie treści
        tocContainer.addEventListener('click', (event) => {
            if (event.target.tagName.toLowerCase() === 'a') {
                event.preventDefault();
                const targetId = event.target.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    // Zamknij menu po kliknięciu
                    closeMenu();

                    // Przewiń do elementu
                    // Czekamy chwilę, aż menu się zamknie, żeby obliczenia były poprawne
                    setTimeout(() => {
                        const headerOffset = 60; // Wysokość nagłówka + mały margines
                        const elementPosition = targetElement.getBoundingClientRect().top;
                        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
                        
                        window.scrollTo({
                            top: offsetPosition,
                            behavior: "smooth"
                        });
                    }, 400); // Czas musi być równy lub większy niż transition w CSS
                }
            }
        });
    };

    // Uruchom obie funkcje po załadowaniu strony
    generateTableOfContents();
});

================================================================================

#####################################
#
# Plik: static/js/old_table_of_contents.js
#
#####################################

// static/js/table_of_contents.js

$(document).ready(function() {
    const $pageContent = $('#page-content');
    const headings = $pageContent.find('h2, h3');

    // REFERENCJE DO GŁÓWNYCH KONTENERÓW KOLUMN/KART SPISU TREŚCI
    // Będziemy ukrywać/pokazywać całe te bloki
    const $desktopTocColumn = $('.col-md-3.order-md-1');
    const $mobileTocCard = $('#mobile-toc-container'); // To już jest referencja do karty mobilnej

    // Jeśli nie ma nagłówków, UKRYJ CAŁE KONTENERY SPISÓW TREŚCI I ZAKOŃCZ SKRYPT
    if (headings.length === 0) {
        $desktopTocColumn.hide(); // Ukryj całą kolumnę desktopową
        $mobileTocCard.hide();    // Ukryj całą kartę mobilną (wraz z przyciskiem)
        return; // WAŻNE: Zakończ wykonywanie skryptu, jeśli nie ma nagłówków
    }

    // --- Jeśli są nagłówki, kontynuuj generowanie spisu treści ---

    let tocHTML = '<nav class="nav flex-column">'; // Rozpocznij budowanie HTML spisu treści z tagiem <nav>
    headings.each(function(index) {
        const $heading = $(this);
        let id = $heading.attr('id');
        if (!id) {
            id = 'section-' + (index + 1) + '-' + $heading.text().toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');
            $heading.attr('id', id);
        }

        let className = 'nav-link';
        if ($heading.prop('tagName') === 'H3') {
            className += ' ms-3';
        }

        tocHTML += `<a class="${className}" href="#${id}">${$heading.text()}</a>`;
    });
    tocHTML += '</nav>'; // Zamknij tag <nav>

    // Wstaw wygenerowany HTML do kontenerów spisu treści
    $('#table-of-contents-desktop').html(tocHTML);
    $('#table-of-contents-mobile').html(tocHTML);

    // Pokaż kontenery spisu treści, jeśli są nagłówki (bo na początku mogły być ukryte)
    $desktopTocColumn.show(); // Pokaż całą kolumnę desktopową
    $mobileTocCard.show();    // Pokaż całą kartę mobilną


    // --- Reszta kodu odpowiedzialna za funkcjonalność spisu treści ---

    // Konieczne jest ponowne pobranie referencji do <nav>,
    // ponieważ zostały one dynamicznie wstawione do DOM.
    const $tocDesktop = $('#table-of-contents-desktop nav');
    const $tocMobile = $('#table-of-contents-mobile nav');
    
    // Upewnij się, że przycisk mobilny "Pokaż spis treści" jest zawsze widoczny,
    // jeśli spis treści jest generowany.
    // Pamiętaj, że cała karta mobilna ($mobileTocCard) jest pokazywana wyżej.

    // Smooth scrolling dla obu spisów treści
    $([$tocDesktop[0], $tocMobile[0]]).on('click', 'a.nav-link', function(e) {
        e.preventDefault();
        const targetId = $(this).attr('href');
        $('html, body').animate({
            scrollTop: $(targetId).offset().top - $('header').outerHeight() - 20
        }, 800);

        if ($(window).width() < 768) {
            $('#table-of-contents-mobile-collapse').collapse('hide');
        }
    });

    // Aktywny link w spisie treści podczas scrollowania
    const $allTocLinks = $tocDesktop.find('.nav-link').add($tocMobile.find('.nav-link'));
    const headingPositions = headings.map(function() {
        return {
            id: $(this).attr('id'),
            top: $(this).offset().top
        };
    }).get();

    $(window).on('scroll', function() {
        const scrollPos = $(document).scrollTop();
        const headerHeight = $('header').outerHeight();
        const offset = headerHeight + 10;

        let currentActiveHeadingId = null;

        for (let i = headingPositions.length - 1; i >= 0; i--) {
            if (scrollPos >= headingPositions[i].top - offset) {
                currentActiveHeadingId = headingPositions[i].id;
                break;
            }
        }

        $allTocLinks.removeClass('active-toc-link');
        if (currentActiveHeadingId) {
            $(`a[href="#${currentActiveHeadingId}"]`, $allTocLinks).addClass('active-toc-link');
        }

        // Pokaż/ukryj przycisk "Powrót na górę"
        const $backToTopButton = $('#back-to-top');
        if (scrollPos > 300) {
            $backToTopButton.fadeIn();
        } else {
            $backToTopButton.fadeOut();
        }
    });

    // Funkcjonalność przycisku "Powrót na górę"
    $('#back-to-top').on('click', function() {
        $('html, body').animate({
            scrollTop: 0
        }, 800);
    });
});

================================================================================

#####################################
#
# Plik: static/js/script.js
#
#####################################

// script.js

$(document).ready(function() {
    // Obsługa kliknięcia ikony burgera
    // Celujemy bezpośrednio w div.burger z klasą .burger, jak było na początku
    $('.burger-wrap .burger').on('click', function() {
        $(this).toggleClass('open'); // Animacja burgera
        $('.main-menu').toggleClass('open'); // Otwieranie/zamykanie menu bocznego
        $('body').toggleClass('overlay-open'); // Pokazywanie/ukrywanie overlay'a
        $('body').toggleClass('overlay-full'); // Zapewnienie, że overlay jest pełny
        $('body').toggleClass('overflow-hidden'); // Zapobiega przewijaniu tła, gdy menu jest otwarte (opcjonalnie)
    });

    // Obsługa kliknięcia przycisku zamykania w menu
    $('.main-menu .close-menu').on('click', function() {
        // Celujemy w div.burger z klasą .burger
        $('.burger-wrap .burger').removeClass('open'); 
        $('.main-menu').removeClass('open');
        $('body').removeClass('overlay-open');
        $('body').removeClass('overlay-full');
        $('body').removeClass('overflow-hidden');
    });

    // Obsługa kliknięcia na overlay
    $('.overlay').on('click', function() {
        // Celujemy w div.burger z klasą .burger
        $('.burger-wrap .burger').removeClass('open');
        $('.main-menu').removeClass('open');
        $('body').removeClass('overlay-open');
        $('body').removeClass('overlay-full');
        $('body').removeClass('overflow-hidden');
    });

    // Funkcja do obsługi klas 'opac' dla linków w menu głównym (bez zmian)
    $('#menu-main li a').on('mouseenter', function() {
        $('#menu-main li a').not(this).addClass('opac');
    }).on('mouseleave', function() {
        $('#menu-main li a').removeClass('opac');
    });

    // Dodatkowa obsługa, aby zamknąć menu po kliknięciu linku w menu bocznym (bez zmian)
    $('#menu-main li a, .extra-menu-links li a').on('click', function() {
        setTimeout(function() {
            $('.burger-wrap .burger').removeClass('open'); // Celujemy w div.burger
            $('.main-menu').removeClass('open');
            $('body').removeClass('overlay-open');
            $('body').removeClass('overlay-full');
            $('body').removeClass('overflow-hidden');
        }, 300);
    });

    // Funkcjonalność przycisku "Powrót na górę"
    $('#back-to-top').on('click', function() {
        $('html, body').animate({
            scrollTop: 0
        }, 800);
    });
    // --- Inne skrypty, które możesz mieć w przyszłości ---
});

================================================================================

#####################################
#
# Plik: static/js/table_of_contents.js
#
#####################################

// static/js/table_of_contents.js

$(document).ready(function() {
    const $pageContent = $('#page-content');
    const headings = $pageContent.find('h2, h3');

    // REFERENCJE DO GŁÓWNYCH KONTENERÓW KOLUMN/KART SPISU TREŚCI
    // Będziemy ukrywać/pokazywać całe te bloki
    const $desktopTocColumn = $('.col-md-3.order-md-1');
    const $mobileTocCard = $('#mobile-toc-container'); // To już jest referencja do karty mobilnej

    // Jeśli nie ma nagłówków, UKRYJ CAŁE KONTENERY SPISÓW TREŚCI I ZAKOŃCZ SKRYPT
    if (headings.length === 0) {
        $desktopTocColumn.hide(); // Ukryj całą kolumnę desktopową
        $mobileTocCard.hide();    // Ukryj całą kartę mobilną (wraz z przyciskiem)
        return; // WAŻNE: Zakończ wykonywanie skryptu, jeśli nie ma nagłówków
    }

    // --- Jeśli są nagłówki, kontynuuj generowanie spisu treści ---

    let tocHTML = '<nav class="nav flex-column">'; // Rozpocznij budowanie HTML spisu treści z tagiem <nav>
    headings.each(function(index) {
        const $heading = $(this);
        let id = $heading.attr('id');
        if (!id) {
            id = 'section-' + (index + 1) + '-' + $heading.text().toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');
            $heading.attr('id', id);
        }

        let className = 'nav-link';
        if ($heading.prop('tagName') === 'H3') {
            className += ' ms-3';
        }

        tocHTML += `<a class="${className}" href="#${id}">${$heading.text()}</a>`;
    });
    tocHTML += '</nav>'; // Zamknij tag <nav>

    // Wstaw wygenerowany HTML do kontenerów spisu treści
    $('#table-of-contents-desktop').html(tocHTML);
    $('#table-of-contents-mobile').html(tocHTML);

    // Pokaż kontenery spisu treści, jeśli są nagłówki (bo na początku mogły być ukryte)
    $desktopTocColumn.show(); // Pokaż całą kolumnę desktopową
    $mobileTocCard.show();    // Pokaż całą kartę mobilną


    // --- Reszta kodu odpowiedzialna za funkcjonalność spisu treści ---

    // Konieczne jest ponowne pobranie referencji do <nav>,
    // ponieważ zostały one dynamicznie wstawione do DOM.
    const $tocDesktop = $('#table-of-contents-desktop nav');
    const $tocMobile = $('#table-of-contents-mobile nav');
    
    // Upewnij się, że przycisk mobilny "Pokaż spis treści" jest zawsze widoczny,
    // jeśli spis treści jest generowany.
    // Pamiętaj, że cała karta mobilna ($mobileTocCard) jest pokazywana wyżej.

    // Smooth scrolling dla obu spisów treści
    $([$tocDesktop[0], $tocMobile[0]]).on('click', 'a.nav-link', function(e) {
        e.preventDefault();
        const targetId = $(this).attr('href');
        $('html, body').animate({
            scrollTop: $(targetId).offset().top - $('header').outerHeight() - 20
        }, 800);

        if ($(window).width() < 768) {
            $('#table-of-contents-mobile-collapse').collapse('hide');
        }
    });

    // Aktywny link w spisie treści podczas scrollowania
    const $allTocLinks = $tocDesktop.find('.nav-link').add($tocMobile.find('.nav-link'));
    const headingPositions = headings.map(function() {
        return {
            id: $(this).attr('id'),
            top: $(this).offset().top
        };
    }).get();

    $(window).on('scroll', function() {
        const scrollPos = $(document).scrollTop();
        const headerHeight = $('header').outerHeight();
        const offset = headerHeight + 10;

        let currentActiveHeadingId = null;

        for (let i = headingPositions.length - 1; i >= 0; i--) {
            if (scrollPos >= headingPositions[i].top - offset) {
                currentActiveHeadingId = headingPositions[i].id;
                break;
            }
        }

        $allTocLinks.removeClass('active-toc-link');
        if (currentActiveHeadingId) {
            $(`a[href="#${currentActiveHeadingId}"]`, $allTocLinks).addClass('active-toc-link');
        }

        // Pokaż/ukryj przycisk "Powrót na górę"
        const $backToTopButton = $('#back-to-top');
        if (scrollPos > 300) {
            $backToTopButton.fadeIn();
        } else {
            $backToTopButton.fadeOut();
        }
    });

    // Funkcjonalność przycisku "Powrót na górę"
    $('#back-to-top').on('click', function() {
        $('html, body').animate({
            scrollTop: 0
        }, 800);
    });
});

================================================================================

#####################################
#
# Plik: templates/base.html
#
#####################################

{% load static %}
<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>{% block title %}Buddyjski Ośrodek Medytacyjny{% endblock title %}</title>

    <link rel="stylesheet" href="{% static 'css/style.css' %}">
    <link rel="stylesheet" href="{% static 'css/playfair_display_fonts.css' %}">
    <link rel="stylesheet" href="{% static 'css/montserrat_fonts.css' %}">

    {% block extra_head %}{% endblock extra_head %}
</head>
<body>

    {# NOWA STRUKTURA MENU I NAKŁADKI #}
    <div class="menu-overlay" id="menu-overlay"></div>

    <nav class="side-menu" id="side-menu">
        <button class="close-menu-btn" id="close-menu-btn">&times;</button>
        
        <div class="main-menu-content">
            <ul class="main-menu-links">
                <li><a href="{% url 'home' %}">Strona Główna</a></li>
                {# Linki generowane z CMS #}
                {% for page in all_pages %}
                    {% if page.is_published %}
                    <li><a href="{{ page.get_absolute_url }}">{{ page.title }}</a></li>
                    {% endif %}
                {% endfor %}
                {# Statyczny link do archiwum #}
                <li><a href="{% url 'news:archive_all' %}">Archiwum</a></li>
            </ul>

            {# Kontener na dynamicznie generowany spis treści (pod-menu) #}
            <div class="toc-container" id="toc-container"></div>
        </div>
    </nav>
    {# KONIEC NOWEJ STRUKTURY #}


    <header class="site-header">
        {% include 'header.html' %}
    </header>

    <main>
        {% block content %}
            {# Tutaj będzie wstrzykiwana główna treść każdej podstrony #}
        {% endblock content %}
    </main>

    <footer>
        {% include 'footer.html' %}
    </footer>

    {# Podłączamy nasz nowy skrypt do obsługi menu #}
    <script src="{% static 'js/menu.js' %}"></script>
    
    {% block extra_body %}{% endblock extra_body %}

</body>
</html>

================================================================================

#####################################
#
# Plik: templates/footer.html
#
#####################################



================================================================================

#####################################
#
# Plik: templates/header.html
#
#####################################

{# templates/header.html #}
{% load static %}

<div class="header-container">

    <div class="burger-menu-icon" id="burger-menu-icon">
        <div class="line1"></div>
        <div class="line2"></div>
        <div class="line3"></div>
    </div>

    {# USUNIĘTO ŚRODKOWY NAPIS Z TEGO MIEJSCA #}

    <a href="{% url 'home' %}" class="logo-right">
        <img src="{% static 'img/logo_karma_kagyu.png' %}" alt="Logo Karma Kagyu">
    </a>

</div>

================================================================================

#####################################
#
# Plik: templates/home.html
#
#####################################

{% extends 'base.html' %}

{% block title %}Strona Główna - Nowy Projekt{% endblock title %}

{% block content %}
<div style="padding: 40px; text-align: center;">
    <h1>Witaj na nowej stronie głównej!</h1>
    <p>Szkielet szablonu (base.html i header.html) został wczytany poprawnie.</p>
</div>
{% endblock content %}

================================================================================

#####################################
#
# Plik: templates/news/archive_list.html
#
#####################################

{# templates/news/archive_list.html #}
{% extends 'base.html' %}
{% load static %}
{% load i18n %}
{% load humanize %}
{% load news_filters %}

{% block title %}{{ archive_title }} - Mini CMS{% endblock %}

{% block content %}
    <div class="row">
        {# Główna treść strony z listą artykułów w archiwum na pełną szerokość #}
        <div class="col-md-12">
            <h1 class="mb-4">{{ archive_title }}</h1>
            {% if articles %}
                {% for article in articles %}
                    {# Dodano klasę 'pinned-article' i opcjonalną plakietkę #}
                    <div class="card mb-3 {% if article.is_pinned %}pinned-article{% endif %}">
                        <div class="row g-0">
                            {% if article.thumbnail %}
                                <div class="col-md-4">
                                    <img src="{{ article.thumbnail.url }}" class="img-fluid rounded-start" alt="{{ article.title }}">
                                </div>
                            {% endif %}
                            <div class="{% if article.thumbnail %}col-md-8{% else %}col-md-12{% endif %}">
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <a href="{% url 'news:article_detail' slug=article.slug %}" class="text-decoration-none">{{ article.title }}</a>
                                        {% if article.is_pinned %}
                                            <span class="badge bg-primary ms-2">Przypięte</span>
                                        {% endif %}
                                    </h5>
                                    <p class="card-text"><small class="text-muted">Opublikowano: {{ article.published_date|date:"Y-m-d H:i" }}</small></p>
                                    <p class="card-text">{{ article.content|striptags|truncatewords:50 }}</p>
                                    <a href="{% url 'news:article_detail' slug=article.slug %}" class="btn btn-primary btn-sm">Czytaj więcej</a>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}

                {# Paginacja dla archiwum #}
                {% if articles.has_other_pages %}
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            {% if articles.has_previous %}
                                <li class="page-item"><a class="page-link" href="?page={{ articles.previous_page_number }}">Poprzednia</a></li>
                            {% else %}
                                <li class="page-item disabled"><span class="page-link">Poprzednia</span></li>
                            {% endif %}
                            {# Wyświetlanie numerów stron #}
                            {% for num in articles.paginator.page_range %}
                                {% if articles.number == num %}
                                    <li class="page-item active" aria-current="page"><span class="page-link">{{ num }}</span></li>
                                {% else %}
                                    <li class="page-item"><a class="page-link" href="?page={{ num }}">{{ num }}</a></li>
                                {% endif %}
                            {% endfor %}
                            
                            {% if articles.has_next %}
                                <li class="page-item"><a class="page-link" href="?page={{ articles.next_page_number }}">Następna</a></li>
                            {% else %}
                                <li class="page-item disabled"><span class="page-link">Następna</span></li>
                            {% endif %}
                        </ul>
                    </nav>
                {% endif %}

            {% else %}
                <p class="lead">Brak aktualności w tym okresie archiwum.</p>
            {% endif %}
        </div>

        {# WAŻNE: Usunięto cały sidebar z archiwum, który był w div.col-md-3 #}
    </div>
{% endblock content %}

================================================================================

#####################################
#
# Plik: templates/news/article_detail.html
#
#####################################

{# templates/news/article_detail.html #}
{% extends 'base.html' %}

{% block title %}{{ article.title }} - Aktualności{% endblock %}

{% block content %}
    <h1 class="mb-4">{{ article.title }}</h1>
    <p class="text-muted mb-4">Opublikowano: {{ article.published_date|date:"Y-m-d H:i" }}</p>
    {% if article.thumbnail %}
        <img src="{{ article.thumbnail.url }}" alt="{{ article.title }}" class="img-fluid mb-4 rounded">
    {% endif %}
    <div class="article-content lead">
        {{ article.content|safe }} {# Używamy |safe, bo TinyMCE generuje HTML #}
    </div>
    <p class="text-muted mt-4">Ostatnia aktualizacja: {{ article.updated_at|date:"Y-m-d H:i" }}</p>
    <a href="{% url 'news:list' %}" class="btn btn-secondary mt-3">Powrót do aktualności</a> {# Link 'Powrót do aktualności' jest już poprawny #}
{% endblock content %}

================================================================================

#####################################
#
# Plik: templates/news/article_list.html
#
#####################################

{# templates/news/article_list.html #}
{% extends 'base.html' %}

{% block title %}Aktualności{% endblock title %}

{% block content %}
<div class="content-container">

    {# DODAJEMY TUTAJ NAZWĘ OŚRODKA #}
    <div class="page-main-title">
        {% if header_content and header_content.site_name %}
            {{ header_content.site_name|safe }}
        {% else %}
            Buddyjski Ośrodek Medytacyjny w Rybniku
        {% endif %}
    </div>

    <div class="article-list">
        {% for article in articles %}
            <article class="article-entry">
                <div class="article-full-content">
                    {{ article.content|safe }}
                </div>
            </article>
        {% empty %}
            <p>Brak dostępnych artykułów.</p>
        {% endfor %}
    </div>
</div>
{% endblock content %}

================================================================================

#####################################
#
# Plik: templates/pages/page_detail.html
#
#####################################

{% extends 'base.html' %}
{% load static %}

{% block title %}{{ page.title }}{% endblock title %}

{% block content %}
<div class="content-container">

    {# Używamy naszej standardowej, ostylowanej klasy dla tytułu strony #}
    <h1 class="page-main-title">{{ page.title }}</h1>

    {# Obraz nagłówkowy, jeśli istnieje, z nową klasą do stylowania #}
    {% if page.header_image %}
        <img src="{{ page.header_image.url }}" class="page-header-image" alt="{{ page.title }}">
    {% endif %}

    {# Ten kontener jest kluczowy! Nasz menu.js szuka ID="page-content", aby zbudować z niego spis treści #}
    <div id="page-content" class="page-content">
        {{ page.content|safe }}
    </div>

</div>
{% endblock content %}


================================================================================



============================== STRUKTURA PROJEKTU ==============================

Drzewo projektu (wygenerowano: 2025-06-18 16:28:18)
========================================
kagyu_mini_cms/
    ├── db.sqlite3  (pominięty)
    ├── deploy.sh
    ├── git-deploy.sh
    ├── kod_plikow.py
    ├── manage.py
    └── requirements.txt
    └── static/
        └── js/
            ├── menu.js
            ├── old_table_of_contents.js
            ├── script.js
            └── table_of_contents.js
        └── fonts/
            ├── Montserrat-Italic-VariableFont_wght.ttf  (pominięty)
            ├── Montserrat-VariableFont_wght.ttf  (pominięty)
            ├── OFL.txt
            ├── PlayfairDisplay-Italic-VariableFont_wght.ttf  (pominięty)
            ├── PlayfairDisplay-VariableFont_wght.ttf  (pominięty)
            ├── README-Montserrat.txt
            └── README_PlayfairDisplay.txt
        └── img/
            ├── karma-kagyu-wirowka.png  (pominięty)
            ├── logo_karma_kagyu.png  (pominięty)
            ├── logo_karma_kagyu_transparent.png  (pominięty)
            ├── sommerkurs2022-header.jpg  (pominięty)
            └── sommerkurs2022-header.jpg~
        └── css/
            ├── montserrat_fonts.css
            ├── old-style.css
            ├── playfair_display_fonts.css
            ├── style.css
            └── ver1-style.css
    └── templates/
        ├── base.html
        ├── footer.html
        ├── header.html
        └── home.html
        └── pages/
            └── page_detail.html
        └── news/
            ├── archive_list.html
            ├── article_detail.html
            └── article_list.html
    └── pages/
        ├── __init__.py
        ├── admin.py
        ├── apps.py
        ├── models.py
        ├── tests.py
        ├── urls.py
        └── views.py
    └── news/
        ├── __init__.py
        ├── admin.py
        ├── apps.py
        ├── models.py
        ├── tests.py
        ├── urls.py
        └── views.py
        └── templatetags/
            ├── __init__.py
            └── news_filters.py
    └── core/
        ├── __init__.py
        ├── asgi.py
        ├── settings.py
        ├── urls.py
        └── wsgi.py
    └── site_config/
        ├── __init__.py
        ├── admin.py
        ├── apps.py
        ├── context_processors.py
        ├── models.py
        ├── tests.py
        └── views.py

================================================================================
