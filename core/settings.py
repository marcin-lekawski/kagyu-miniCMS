"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
from django.urls import reverse_lazy  
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [   'localhost',
                    '127.0.0.1',
                    'marcin108.pythonanywhere.com',
                ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'pages', # Nasza aplikacja 'pages' do zarządzania stronami
    'news', # Aplikacja 'news' do zarządzania aktualnościami/wydarzeniami w formie bloga
    'tinymce', # Aplikacja TinyMCE do edycji treści
    'site_config', # Aplikacja 'site_config' do zarządzania konfiguracją strony
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'site_config.context_processors.global_website_content', # Tylko ten jeden procesor
            ],
            'libraries': {
                'news_filters': 'news.templatetags.news_filters', # Jawne ładowanie filtrów
            }
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static', # Informuje Django, gdzie szukać dodatkowych plików statycznych
]

# STATIC_ROOT jest używane podczas 'collectstatic' w środowisku produkcyjnym
STATIC_ROOT = BASE_DIR / 'staticfiles' # Gdzie pliki będą zbierane dla serwera WWW

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files (user uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# TinyMCE settings
TINYMCE_DEFAULT_CONFIG = {
    "height": "500px",
    "width": "100%",
    "menubar": "file edit view insert format tools table help customImageMenu",
    "menu": {
        "customImageMenu": {
            "title": "Obrazy",
            "items": "applyFullWidth applyWrapLeft applyWrapRight | removeImageStyle"
        }
    },
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount hr autosave template",
    "toolbar": "undo redo | styleselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | hr | removeformat | image template | code",
    "custom_undo_redo_levels": 10,
    "language": "pl",
    "images_upload_url": "/tinymce/upload-image/",
    "automatic_uploads": True,
    "file_picker_types": "image",
    "images_upload_credentials": True,

    "templates": [
        # ... Twoja sekcja z szablonami pozostaje bez zmian ...
        {
            "title": "Szablon standardowej strony",
            "content": """
                <h2>Wprowadzenie [Nagłówek H2]</h2>
                <p>Zacznij tutaj swój artykuł...</p>
            """
        },
        {
            "title": "Szablon ogłoszenia o kursie",
            "content": """
                <h2>[Tytuł kursu] z [Imię nauczyciela]</h2>
                <p><em>W dniach [data] zapraszamy...</em></p>
            """
        }
    ],

    # ======================================================================
    #   NOWA, POPRAWIONA I STABILNA WERSJA SEKCJI SETUP
    # ======================================================================
    "setup": """
        function(editor) {
            
            // Krok 1: Rejestrujemy nasze niestandardowe formaty
            editor.on('init', function() {
                editor.formatter.register({
                    fullwidth: { block: 'div', classes: 'full-width-image-container', wrapper: true },
                    leftwrap: { block: 'div', classes: 'image-wrap-left', wrapper: true },
                    rightwrap: { block: 'div', classes: 'image-wrap-right', wrapper: true }
                });
            });

            // Funkcja pomocnicza do sprawdzania, czy zaznaczony jest obraz
            const isImage = (node) => node.nodeName === 'IMG';

            // Funkcja, która będzie włączać/wyłączać opcje menu
            const onSetupFormat = (api, formatName) => {
                const onNodeChange = () => {
                    api.setDisabled(!isImage(editor.selection.getNode()));
                };
                editor.on('NodeChange', onNodeChange);
                return () => editor.off('NodeChange', onNodeChange);
            };

            // Krok 2: Rejestrujemy opcje w menu, używając wbudowanego formatowania
            editor.ui.registry.addMenuItem('applyFullWidth', {
                text: 'Ustaw na pełną szerokość',
                icon: 'fullscreen',
                onAction: () => editor.formatter.apply('fullwidth'),
                onSetup: (api) => onSetupFormat(api, 'fullwidth')
            });

            editor.ui.registry.addMenuItem('applyWrapLeft', {
                text: 'Opływanie z lewej',
                icon: 'align-left',
                onAction: () => editor.formatter.apply('leftwrap'),
                onSetup: (api) => onSetupFormat(api, 'leftwrap')
            });
            
            editor.ui.registry.addMenuItem('applyWrapRight', {
                text: 'Opływanie z prawej',
                icon: 'align-right',
                onAction: () => editor.formatter.apply('rightwrap'),
                onSetup: (api) => onSetupFormat(api, 'rightwrap')
            });
            
            editor.ui.registry.addMenuItem('removeImageStyle', {
                text: 'Usuń styl obrazu',
                icon: 'remove-formatting',
                onAction: () => {
                    editor.formatter.remove('fullwidth');
                    editor.formatter.remove('leftwrap');
                    editor.formatter.remove('rightwrap');
                },
                onSetup: (api) => onSetupFormat(api, 'remove')
            });
        }
    """
}
